
        while(True) {
            debug_memory(<0x2834>, 0x01);
            object[<0x2834>] = 0x01;
            sleep(0x50);
            debug_memory(<0x2834>, 0x02);
            object[<0x2834>] = 0x02;
            sleep(0x50);
            debug_memory(<0x2834>, 0x03);
            object[<0x2834>] = 0x03;
            sleep(0x50);
            debug_memory(<0x2834>, 0x7e);
            object[<0x2834>] = 0x7e;
            sleep(0x50);
            debug_memory(<0x2834>, 0x00);
            object[<0x2834>] = 0x00;
            sleep(0x50);
        }

        while(True) {
            subtext(string("1[END]"));
            object[0x0e]  = 0x01;
            sleep(0x50);
            subtext(string("2[END]"));
            object[0x0e]  = 0x02;
            sleep(0x50);
            subtext(string("3[END]"));
            object[0x0e]  = 0x03;
            sleep(0x50);
            subtext(string("7e[END]"));
            object[0x0e]  = 0x7e;
            sleep(0x50);
            subtext(string("0[END]"));
            object[0x0e]  = 0x00;
            sleep(0x50);
        }

map name(0x00) {
    enum entrance {
        east = entrance(0x44, 0x44, DIRECTION.WEST),
        west = entrance(0x01, 0x3d, DIRECTION.EAST),
        cave = entrance(0x41, 0x0b, DIRECTION.SOUTH)
    }

    enum stepon_trigger {
        stepon_0 = @install() fun test() {
            subtext(string("exit? 0 [END]"));
        },
        stepon_1 = @install() fun test() {
            subtext(string("exit? 1 [END]"));
        },
        stepon_2 = @install() fun test() {
            subtext(string("exit? 2 [END]"));
        },
        stepon_3 = @install() fun test() {
            subtext(string("exit? 3 [END]"));
        },
        stepon_4 = @install() fun test() {
            subtext(string("exit? 4 [END]"));
        },
        stepon_5 = @install() fun test() {
            subtext(string("exit? 5 [END]"));
        },
        stepon_6 = @install() fun test() {
            subtext(string("exit? 6 [END]"));
        },
        stepon_7 = @install() fun test() {
            subtext(string("exit? 7 [END]"));
        },
        stepon_8 = @install() fun test() {
            subtext(string("exit? 8 [END]"));
        },
        stepon_9 = @install() fun test() {
            subtext(string("exit? 9 [END]"));
        },

        stepon_10 = @install() fun test() {
            subtext(string("exit? 10 [END]"));
        },
        stepon_11 = @install() fun test() {
            subtext(string("exit? 11 [END]"));
        },
        stepon_12 = @install() fun test() {
            subtext(string("exit? 12 [END]"));
        },
        stepon_13 = @install() fun test() {
            subtext(string("exit? 13 [END]"));
        },
        stepon_14 = @install() fun test() {
            subtext(string("exit? 14 [END]"));
        },
        stepon_15 = @install() fun test() {
            subtext(string("exit? 15 [END]"));
        },
        stepon_16 = @install() fun test() {
            subtext(string("exit? 16 [END]"));
        },
        stepon_17 = @install() fun test() {
            subtext(string("exit? 17 [END]"));
        },
        stepon_18 = @install() fun test() {
            subtext(string("exit? 18 [END]"));
        },
        stepon_19 = @install() fun test() {
            subtext(string("exit? 19 [END]"));
        },

        stepon_20 = @install() fun test() {
            subtext(string("exit? 20 [END]"));
        },
        stepon_21 = @install() fun test() {
            subtext(string("exit? 21 [END]"));
        },
        stepon_22 = @install() fun test() {
            subtext(string("exit? 22 [END]"));
        },
        stepon_23 = @install() fun test() {
            subtext(string("exit? 23 [END]"));
        },
        stepon_24 = @install() fun test() {
            subtext(string("exit? 24 [END]"));
        },
        stepon_25 = @install() fun test() {
            subtext(string("exit? 25 [END]"));
        },
        stepon_26 = @install() fun test() {
            subtext(string("exit? 26 [END]"));
        },
        stepon_27 = @install() fun test() {
            subtext(string("exit? 27 [END]"));
        },
        stepon_28 = @install() fun test() {
            subtext(string("exit? 28 [END]"));
        },
        stepon_29 = @install() fun test() {
            subtext(string("exit? 29 [END]"));
        },

        stepon_30 = @install() fun test() {
            subtext(string("exit? 30 [END]"));
        },
        stepon_31 = @install() fun test() {
            subtext(string("exit? 31 [END]"));
        },
        stepon_32 = @install() fun test() {
            subtext(string("exit? 32 [END]"));
        },
        stepon_33 = @install() fun test() {
            subtext(string("exit? 33 [END]"));
        },
        stepon_34 = @install() fun test() {
            subtext(string("exit? 34 [END]"));
        },
        stepon_35 = @install() fun test() {
            subtext(string("exit? 35 [END]"));
        },
        stepon_36 = @install() fun test() {
            subtext(string("exit? 36 [END]"));
        },
        stepon_37 = @install() fun test() {
            subtext(string("exit? 37 [END]"));
        },
        stepon_38 = @install() fun test() {
            subtext(string("exit? 38 [END]"));
        },
        stepon_39 = @install() fun test() {
            subtext(string("exit? 39 [END]"));
        },

        stepon_40 = @install() fun test() {
            subtext(string("exit? 40 [END]"));
        },
        stepon_41 = @install() fun test() {
            subtext(string("exit? 41 [END]"));
        },
        stepon_42 = @install() fun test() {
            subtext(string("exit? 42 [END]"));
        },
        stepon_43 = @install() fun test() {
            subtext(string("exit? 43 [END]"));
        },
        stepon_44 = @install() fun test() {
            subtext(string("exit? 44 [END]"));
        },
        stepon_45 = @install() fun test() {
            subtext(string("exit? 45 [END]"));
        },
        stepon_46 = @install() fun test() {
            subtext(string("exit? 46 [END]"));
        },
        stepon_47 = @install() fun test() {
            subtext(string("exit? 47 [END]"));
        },
        stepon_48 = @install() fun test() {
            subtext(string("exit? 48 [END]"));
        },
        stepon_49 = @install() fun test() {
            subtext(string("exit? 49 [END]"));
        },

        stepon_50 = @install() fun test() {
            subtext(string("exit? 50 [END]"));
        },
        stepon_51 = @install() fun test() {
            subtext(string("exit? 51 [END]"));
        },
        stepon_52 = @install() fun test() {
            subtext(string("exit? 52 [END]"));
        },
        stepon_53 = @install() fun test() {
            subtext(string("exit? 53 [END]"));
        },
        stepon_54 = @install() fun test() {
            subtext(string("exit? 54 [END]"));
        },
        stepon_55 = @install() fun test() {
            subtext(string("exit? 55 [END]"));
        },
        stepon_56 = @install() fun test() {
            subtext(string("exit? 56 [END]"));
        },
        stepon_57 = @install() fun test() {
            subtext(string("exit? 57 [END]"));
        },
        stepon_58 = @install() fun test() {
            subtext(string("exit? 58 [END]"));
        },
        stepon_59 = @install() fun test() {
            subtext(string("exit? 59 [END]"));
        },

        stepon_60 = @install() fun test() {
            subtext(string("exit? 60 [END]"));
        },
        stepon_61 = @install() fun test() {
            subtext(string("exit? 61 [END]"));
        },
        stepon_62 = @install() fun test() {
            subtext(string("exit? 62 [END]"));
        },
        stepon_63 = @install() fun test() {
            subtext(string("exit? 63 [END]"));
        },
        stepon_64 = @install() fun test() {
            subtext(string("exit? 64 [END]"));
        },
        stepon_65 = @install() fun test() {
            subtext(string("exit? 65 [END]"));
        },
        stepon_66 = @install() fun test() {
            subtext(string("exit? 66 [END]"));
        },
        stepon_67 = @install() fun test() {
            subtext(string("exit? 67 [END]"));
        },
        stepon_68 = @install() fun test() {
            subtext(string("exit? 68 [END]"));
        },
        stepon_69 = @install() fun test() {
            subtext(string("exit? 69 [END]"));
        }
    }

    enum b_trigger {
        b_trigger_0 = @install() fun test() {
            subtext(string("b? 0 [END]"));
        },
        b_trigger_1 = @install() fun test() {
            subtext(string("b? 1 [END]"));
        },
        b_trigger_2 = @install() fun test() {
            subtext(string("b? 2 [END]"));
        },
        b_trigger_3 = @install() fun test() {
            subtext(string("b? 3 [END]"));
        },
        b_trigger_4 = @install() fun test() {
            subtext(string("b? 4 [END]"));
        },
        b_trigger_5 = @install() fun test() {
            subtext(string("b? 5 [END]"));
        },
        b_trigger_6 = @install() fun test() {
            subtext(string("b? 6 [END]"));
        },
        b_trigger_7 = @install() fun test() {
            subtext(string("b? 7 [END]"));
        },
        b_trigger_8 = @install() fun test() {
            subtext(string("b? 8 [END]"));
        },
        b_trigger_9 = @install() fun test() {
            subtext(string("b? 9 [END]"));
        },

        b_trigger_10 = @install() fun test() {
            subtext(string("b? 10 [END]"));
        },
        b_trigger_11 = @install() fun test() {
            subtext(string("b? 11 [END]"));
        },
        b_trigger_12 = @install() fun test() {
            subtext(string("b? 12 [END]"));
        },
        b_trigger_13 = @install() fun test() {
            subtext(string("b? 13 [END]"));
        },
        b_trigger_14 = @install() fun test() {
            subtext(string("b? 14 [END]"));
        },
        b_trigger_15 = @install() fun test() {
            subtext(string("b? 15 [END]"));
        },
        b_trigger_16 = @install() fun test() {
            subtext(string("b? 16 [END]"));
        },
        b_trigger_17 = @install() fun test() {
            subtext(string("b? 17 [END]"));
        },
        b_trigger_18 = @install() fun test() {
            subtext(string("b? 18 [END]"));
        },
        b_trigger_19 = @install() fun test() {
            subtext(string("b? 19 [END]"));
        },

        b_trigger_20 = @install() fun test() {
            subtext(string("b? 20 [END]"));
        },
        b_trigger_21 = @install() fun test() {
            subtext(string("b? 21 [END]"));
        },
        b_trigger_22 = @install() fun test() {
            subtext(string("b? 22 [END]"));
        },
        b_trigger_23 = @install() fun test() {
            subtext(string("b? 23 [END]"));
        },
        b_trigger_24 = @install() fun test() {
            subtext(string("b? 24 [END]"));
        },
        b_trigger_25 = @install() fun test() {
            subtext(string("b? 25 [END]"));
        },
        b_trigger_26 = @install() fun test() {
            subtext(string("b? 26 [END]"));
        },
        b_trigger_27 = @install() fun test() {
            subtext(string("b? 27 [END]"));
        },
        b_trigger_28 = @install() fun test() {
            subtext(string("b? 28 [END]"));
        },
        b_trigger_29 = @install() fun test() {
            subtext(string("b? 29 [END]"));
        },

        b_trigger_30 = @install() fun test() {
            subtext(string("b? 30 [END]"));
        },
        b_trigger_31 = @install() fun test() {
            subtext(string("b? 31 [END]"));
        },
        b_trigger_32 = @install() fun test() {
            subtext(string("b? 32 [END]"));
        },
        b_trigger_33 = @install() fun test() {
            subtext(string("b? 33 [END]"));
        },
        b_trigger_34 = @install() fun test() {
            subtext(string("b? 34 [END]"));
        },
        b_trigger_35 = @install() fun test() {
            subtext(string("b? 35 [END]"));
        },
        b_trigger_36 = @install() fun test() {
            subtext(string("b? 36 [END]"));
        },
        b_trigger_37 = @install() fun test() {
            subtext(string("b? 37 [END]"));
        },
        b_trigger_38 = @install() fun test() {
            subtext(string("b? 38 [END]"));
        },
        b_trigger_39 = @install() fun test() {
            subtext(string("b? 39 [END]"));
        },

        b_trigger_40 = @install() fun test() {
            subtext(string("b? 40 [END]"));
        },
        b_trigger_41 = @install() fun test() {
            subtext(string("b? 41 [END]"));
        },
        b_trigger_42 = @install() fun test() {
            subtext(string("b? 42 [END]"));
        },
        b_trigger_43 = @install() fun test() {
            subtext(string("b? 43 [END]"));
        },
        b_trigger_44 = @install() fun test() {
            subtext(string("b? 44 [END]"));
        },
        b_trigger_45 = @install() fun test() {
            subtext(string("b? 45 [END]"));
        },
        b_trigger_46 = @install() fun test() {
            subtext(string("b? 46 [END]"));
        },
        b_trigger_47 = @install() fun test() {
            subtext(string("b? 47 [END]"));
        },
        b_trigger_48 = @install() fun test() {
            subtext(string("b? 48 [END]"));
        },
        b_trigger_49 = @install() fun test() {
            subtext(string("b? 49 [END]"));
        },

        b_trigger_50 = @install() fun test() {
            subtext(string("b? 50 [END]"));
        },
        b_trigger_51 = @install() fun test() {
            subtext(string("b? 51 [END]"));
        },
        b_trigger_52 = @install() fun test() {
            subtext(string("b? 52 [END]"));
        },
        b_trigger_53 = @install() fun test() {
            subtext(string("b? 53 [END]"));
        },
        b_trigger_54 = @install() fun test() {
            subtext(string("b? 54 [END]"));
        },
        b_trigger_55 = @install() fun test() {
            subtext(string("b? 55 [END]"));
        },
        b_trigger_56 = @install() fun test() {
            subtext(string("b? 56 [END]"));
        },
        b_trigger_57 = @install() fun test() {
            subtext(string("b? 57 [END]"));
        },
        b_trigger_58 = @install() fun test() {
            subtext(string("b? 58 [END]"));
        },
        b_trigger_59 = @install() fun test() {
            subtext(string("b? 59 [END]"));
        }
    }

    fun trigger_enter() {
        fade_in();
    }
};










enum MAP {
    ACT2_BETWEEN_HALLS_AND_PYRAMIDS = 0x05
}


map overworld_start(MAP.ACT2_BETWEEN_HALLS_AND_PYRAMIDS) {
    // _variant = 0x00
    // _map_id = 0x05

    val object = enum {
        invisible_bridge = 0x00,
        gourd_1 = 0x01,
    };
    
    val entrance = enum {
        north_1 = entrance(0x17, 0x3f, DIRECTION.SOUTH),
        east_1 = entrance(0x17, 0x3f, DIRECTION.WEST),
        west_1 = entrance(0x17, 0x3f, DIRECTION.EAST),
        west_2 = entrance(0x17, 0x3f, DIRECTION.EAST)
    };

    val b = enum {
        barrier_1 = barrier(0x00),
        gourd_1_1 = loot(ITEM.WATER, 0x01),
        gourd_1_2 = loot(ITEM.LIMESTONE, 0x02),
        gourd_1_3 = loot(ITEM.WAX, 0x003),

        barrier_2 = barrier(0x04),
        gourd_2 = loot(ITEM.WATER, 0x05),
    };
    val step = enum {
        north_1 = exit(overworld_start.north_1, 0x17, 0x3f, 0x17, 0x3f),
        east_1 = exit(overworld_start.east_1, 0x17, 0x3f, 0x17, 0x3f),
        west_1 = exit(overworld_start.west_1, 0x17, 0x3f, 0x17, 0x3f),
        west_2 = exit(overworld_start.west_2, 0x17, 0x3f, 0x17, 0x3f),
        diamond_eyes = nop();
    };


    triggers
}

map test(MAP.ACT2_BETWEEN_HALLS_AND_PYRAMIDS) {
    // _variant = 0x01
    // _map_id = 0x05
    
    b_trigger = []
    step_on_trigger = []
    entrance = enum {
        north_1 = entrance(0x17, 0x3f, DIRECTION.SOUTH),
        east_1 = entrance(0x17, 0x3f, DIRECTION.WEST),
        west_1 = entrance(0x17, 0x3f, DIRECTION.EAST),
        west_2 = entrance(0x17, 0x3f, DIRECTION.EAST)
    }

}



fun transition(entrance, direction) {
    MEMORY.variant = 0xXX;
    transition(0x25, 0x6f, 0x49, DIRECTION.NORTH, DIRECTION.SOUTH);
}


map inbetween(0x05) {
    @install()
    fun trigger_enter() {
        fade_in();
        subtext(string("hello world - inbetween[END]"));

        sleep(0x30);
        // transition(flowers.entrance.north_1, DIRECTION.NORTH);
        // flowers.transition(entrance.north_1, DIRECTION.NORTH);
        // flowers.entrance.north_1.transition(DIRECTION.NORTH);
        transition(flowers, north_1, DIRECTION.NORTH);
    }
};

map flowers(0x38) {
    @install()
    fun trigger_enter() {
        fade_in();
        subtext(string("hello world - flowers[END]"));

        sleep(0x30);
        // load_map(0x05, 0x05, 0x05);
        // transition(inbetween.entrance.north_1, DIRECTION.NORTH);
        inbetween.entrance.north_1.transition(DIRECTION.NORTH);
    }
};

fun loot(flag, object, reward, amount, next) {
  if(!flag) {
    <0x2391> = reward;
    <0x2395> = object;
    call_id(0x3a);
    if(<0x22ea, 0x01>) {
      set(flag);
    }
  }
}



map overworld_start(MAP.ACT2_BETWEEN_HALLS_AND_PYRAMIDS) {
    // _variant = 0x00
    // _map_id = 0x05

    val object = enum {
        invisible_bridge = 0x00,
        gourd_1 = 0x01,
    };
    
    val entrance = enum {
        north_1 = entrance(0x17, 0x3f, DIRECTION.SOUTH),
        east_1 = entrance(0x17, 0x3f, DIRECTION.WEST),
        west_1 = entrance(0x17, 0x3f, DIRECTION.EAST),
        west_2 = entrance(0x17, 0x3f, DIRECTION.EAST)
    };

    val b = enum {
        barrier_1 = axe2_check(0x00, 0x01, None),
        rock_door_1 = axe2_check(0x00, 0x01, None),
        door_1 = axe2_check(0x00, 0x7e, 0x7e),

        barrier_2 = axe3_check(0x01, 0x7e, None),

        gourd_1_1 = loot(0x01, ITEM.WATER, 0x01, 0x02),
        gourd_1_2 = loot(0x02, ITEM.LIMESTONE, 0x02, 0x00),
        gourd_1_3 = loot(0x03, ITEM.WAX, 0x03, 0x00),
    };
    val step = enum {
        north_1 = exit(overworld_start.north_1, 0x17, 0x3f, 0x17, 0x3f),
        east_1 = exit(overworld_start.east_1, 0x17, 0x3f, 0x17, 0x3f),
        west_1 = exit(overworld_start.west_1, 0x17, 0x3f, 0x17, 0x3f),
        west_2 = exit(overworld_start.west_2, 0x17, 0x3f, 0x17, 0x3f),
        diamond_eyes = nop();
    };


    triggers
}


[0x929f49] (6f) Make entity attached to script? walk by 0,2 directly
6f ae b0 b2
[0x929f99] (6f) Make entity attached to script? walk by 0,-2 directly
6f ae b0 ce


[0xb08215] (4e) ATTACH entity boy TO SCRIPT
4e d0
[0xb08217] (09) IF (entity attached to script? == boy) == FALSE THEN SKIP 3 (to 0xb08221)
09 2e 29 50 a2 03 00

[0xb08215] (4e) ATTACH entity boy TO SCRIPT
4e d0
[0xb08217] (09) IF (entity attached to script? == boy) == FALSE THEN SKIP 3 (to 0xb08221)
09 2e 29 50 a2 03 00


[0xb0806f] (09) IF (entity attached to script? == $283f) == FALSE THEN SKIP 3 (to 0xb0807b)
09 2e 29 0e 0b 00 a2 03 00

[0x949345] (09) IF (entity attached to script? == $283f) == FALSE THEN SKIP 32 (to 0x94936e)
09 2e 29 0d 0b 00 a2 20 00




[0x41] Prehistoria - North jungle at 0x9ffeeb
  data at 0xa5e6be
  enter script at 0x928160 => 0x93953f
      [0x93953f] (18) WRITE CHANGE DOGGO ($2443) = Wolf (0x02)
      [0x939543] (1b) WRITE MAP X end   ($23ed) = 0x0318
      [0x939543] (1b) WRITE MAP Y end   ($23ef) = 0x0278
      [0x93954a] (3f) WRITE $0ea2+0=0x40, $0eac+0=0x172b (unknown): Unknown 0eac+0 (set in lots of places)?
      [0x939550] (18) WRITE PRIZE 1 RATE ($239b) = 0x000a
      [0x939554] (18) WRITE PRIZE 2 RATE ($239d) = 0x0005
      [0x939558] (18) WRITE PRIZE 3 RATE ($239f) = 0x0002
      [0x93955c] (18) WRITE PRIZE 1 DROP ($23a1) = 0x0800
      [0x939562] (18) WRITE PRIZE 2 DROP ($23a3) = 0x0805
      [0x939568] (18) WRITE PRIZE 3 DROP ($23a5) = 0x0001
      [0x93956c] (18) WRITE PRIZE 3 QTY  ($23ab) = 0x000c
      [0x939570] (5d) IF $22a1 & 0x40 THEN UNLOAD OBJ 2 (TODO: verify this)
      [0x939574] (5d) IF $22a1 & 0x80 THEN UNLOAD OBJ 3 (TODO: verify this)
      [0x939578] (5d) IF $22a2 & 0x01 THEN UNLOAD OBJ 4 (TODO: verify this)
      [0x93957c] (5d) IF $22a2 & 0x02 THEN UNLOAD OBJ 5 (TODO: verify this)
      [0x939580] (5d) IF $22a2 & 0x04 THEN UNLOAD OBJ 6 (TODO: verify this)
      [0x939584] (5d) IF $22a2 & 0x08 THEN UNLOAD OBJ 7 (TODO: verify this)
      [0x939588] (5d) IF $22a2 & 0x10 THEN UNLOAD OBJ 8 (TODO: verify this)
      [0x93958c] (5d) IF $22a2 & 0x20 THEN UNLOAD OBJ 9 (TODO: verify this)
      [0x939590] (5d) IF $22a2 & 0x40 THEN UNLOAD OBJ 10 (TODO: verify this)
      [0x939594] (5d) IF $22a2 & 0x80 THEN UNLOAD OBJ 11 (TODO: verify this)
      [0x939598] (5d) IF $22a3 & 0x01 THEN UNLOAD OBJ 12 (TODO: verify this)
      [0x93959c] (5d) IF $22a3 & 0x02 THEN UNLOAD OBJ 13 (TODO: verify this)
      [0x9395a0] (5d) IF $22a3 & 0x04 THEN UNLOAD OBJ 14 (TODO: verify this)
      [0x9395a4] (5d) IF $22a3 & 0x08 THEN UNLOAD OBJ 15 (TODO: verify this)
      [0x9395a8] (5d) IF $22a3 & 0x10 THEN UNLOAD OBJ 16 (TODO: verify this)
      [0x9395ac] (5d) IF $22a3 & 0x20 THEN UNLOAD OBJ 17 (TODO: verify this)
      [0x9395b0] (5d) IF $22a3 & 0x40 THEN UNLOAD OBJ 18 (TODO: verify this)
      [0x9395b4] (5d) IF $22a3 & 0x80 THEN UNLOAD OBJ 19 (TODO: verify this)
      [0x9395b8] (5d) IF $22a4 & 0x01 THEN UNLOAD OBJ 20 (TODO: verify this)
      [0x9395bc] (5d) IF $22a4 & 0x02 THEN UNLOAD OBJ 21 (TODO: verify this)
      [0x9395c0] (5d) IF $22a4 & 0x04 THEN UNLOAD OBJ 22 (TODO: verify this)
      [0x9395c4] (ba) LOAD NPC 0c at 0f 35
      [0x9395c8] (ba) LOAD NPC 0c at 21 45
      [0x9395cc] (ba) LOAD NPC 0c at 27 35
      [0x9395d0] (ba) LOAD NPC 0c at 29 29
      [0x9395d4] (ba) LOAD NPC 0c at 39 2f
      [0x9395d8] (ba) LOAD NPC 0c at 49 33
      [0x9395dc] (ba) LOAD NPC 0c at 1d 2d
      [0x9395e0] (ba) LOAD NPC 0c at 33 15
      [0x9395e4] (ba) LOAD NPC 0c at 0b 21
      [0x9395e8] (ba) LOAD NPC 0c at 55 13
      [0x9395ec] (18) WRITE $2433 = 0x0002
      [0x9395f0] (3c) Load NPC 001e>>1 flags/state 0400 at pos 03 45
      [0x9395f7] (18) WRITE $2433 = 0x0003
      [0x9395fb] (3c) Load NPC 001e>>1 flags/state 0400 at pos 39 4b
      [0x939602] (18) WRITE $2433 = 0x0003
      [0x939606] (3c) Load NPC 001e>>1 flags/state 0400 at pos 5b 33
      [0x93960d] (18) WRITE $2433 = 0x0007
      [0x939611] (3c) Load NPC 001e>>1 flags/state 0400 at pos 1d 15
      [0x939618] (18) WRITE $2433 = 0x0002
      [0x93961c] (3c) Load NPC 001e>>1 flags/state 0400 at pos 5b 1f
      [0x939623] (3f) WRITE $0ea2+4=0x01, $0eac+4=0x17b5 (unknown): Unnamed Short script 0x17b5?
      [0x939629] (08) IF !($225e&0x20) NOT(Checked in North Jungle) SKIP 10 (to 0x939639)
      [0x93962f] (3c) Load NPC 003c>>1 flags/state 0002 at pos 48 15
      [0x939636] (04) SKIP 7 (to 0x939640)
      [0x939639] (3c) Load NPC 003c>>1 flags/state 0002 at pos 43 15
      [0x939640] (19) WRITE $2835 = last entity ($0341)
      [0x939644] (08) IF !($22eb&0x20) NOT(in animation) SKIP 8 (to 0x939652)
      [0x93964a] (20) Teleport both to 0f 3f
      [0x93964d] (a3) CALL "Fade-out / stop music" (0x00)
      [0x93964f] (04) SKIP 4 (to 0x939656)
      [0x939652] (0c) $22eb &= 0xdf (8bit mode) (in animation)
      [0x939656] (5d) IF $2268 & 0x10 THEN UNLOAD OBJ 1 (TODO: verify this)
      [0x93965a] (5d) IF $2268 & 0x20 THEN UNLOAD OBJ 0 (TODO: verify this)
      [0x93965e] (09) IF CHANGE MUSIC ($238d) == 0x00 SKIP 4 (to 0x939668)
      [0x939664] (33) PLAY MUSIC 0x7a
      [0x939666] (a3) CALL "Fade-in / start music" (0x01)
      [0x939668] (18) WRITE $23bf = 0x0000
      [0x93966c] (29) CALL 0x92de75 Some cinematic script (used multiple times)
      [0x939670] (00) END (return)
    "Unnamed Short script 0x17b5" = (id:17b5 => addr:0x9394ae)
      [0x9394ae] (0d) $2834 &= 0xfe (8bit mode)
      [0x9394b2] (09) IF (entity attached to script? == $2835) == FALSE THEN SKIP 29 (to 0x9394d8)
      [0x9394bb] (09) IF $225e&0x20 (Checked in North Jungle) SKIP 22 (to 0x9394d8)
      [0x9394c2] (1b) WRITE $249d = 0x0240
      [0x9394c2] (1b) WRITE $249f = 0x00a8
      [0x9394c9] (1b) WRITE $24ab = 0x0218
      [0x9394c9] (1b) WRITE $24af = 0x00a8
      [0x9394d0] (0c) $225e |= 0x20 (Checked in North Jungle)
      [0x9394d4] (0d) $2834 |= 0x01
      [0x9394d8] (09) IF ($2834&0x01) == FALSE THEN SKIP 96 (to 0x93953e)
      [0x9394de] (a7) SLEEP 119 TICKS
      [0x9394e0] (09) IF ($24ab > $249d) == FALSE THEN SKIP 42 (to 0x939515)
      [0x9394eb] (1a) WRITE SCRIPT arg0 = $249d
      [0x9394f0] (09) IF (signed arg0 <= $24ab) == FALSE THEN SKIP 26 (to 0x939514)
      [0x9394fa] (18) WRITE $249f = *(entity attached to script? + 28)
      [0x939502] (43) Teleport entity attached to script? to x:signed arg0, y:$249f
      [0x939509] (a7) SLEEP 3 TICKS
      [0x93950b] (1a) WRITE SCRIPT arg0 = signed arg0 + 1
      [0x939512] (05) SKIP -34 (to 0x9394f0)
      [0x939514] (00) END (return)
      [0x939515] (1a) WRITE SCRIPT arg0 = $249d
      [0x93951a] (09) IF (signed arg0 >= $24ab) == FALSE THEN SKIP 26 (to 0x93953e)
      [0x939524] (18) WRITE $249f = *(entity attached to script? + 28)
      [0x93952c] (43) Teleport entity attached to script? to x:signed arg0, y:$249f
      [0x939533] (a7) SLEEP 3 TICKS
      [0x939535] (1a) WRITE SCRIPT arg0 = signed arg0 - 1
      [0x93953c] (05) SKIP -34 (to 0x93951a)
      [0x93953e] (00) END (return)



    "Unnamed ABS script 0xb08036" = (addr:0xb08036)
      [0xb08036] (29) CALL 0x92d92a Outro rain and sky color
      [0xb0803a] (b4) CALL Absolute (24bit) script 0x92d93e ("Unnamed ABS script 0x92d93e")
                      WITH 5 ARGS 0, 0, 0, 0x2000, 0x90
      [0xb08047] (0c) $2261 &= 0xfd (8bit mode) (Boy unavailable)
      [0xb0804b] (0c) $2261 |= 0x01 (Dog unavailable)
      [0xb0804f] (bd) BOY = Player controlled
      [0xb08050] (98) SWITCH CHAR TO boy
      [0xb08052] (be) Stop/disable doggo (and SELECT button)
      [0xb08053] (42) Teleport dog to 00, 00
      [0xb08057] (ba) LOAD NPC 1b at 15 17
      [0xb0805b] (2a) Make last entity ($0341) script controlled
      [0xb0805d] (76) MAKE last entity ($0341) FACE WEST
      [0xb0805f] (3d) WRITE last entity ($0341)+x66=0x00, last entity ($0341)+x68=0x0040 (talk script): Unnamed NPC Talk script 0x0000
      [0xb08063] (19) WRITE $2834 = last entity ($0341)
      [0xb08067] (29) CALL 0x92de75 Some cinematic script (used multiple times)
      [0xb0806b] (00) END (return)
  step-on scripts at 0xabf500, len=0x0030 (8 entries)
    [1b,1a:1d,1b] = (id:0 => (f0000@928294) => addr:0xb08000)
      [0xb08000] (52) SHOW TEXT 0000 FROM 0x91d000 uncompressed UNWINDOWED
              
      [0xb08003] (7a) WRITE *(entity attached to script? + 11) = 0x0800
      [0xb0800b] (2b) Make entity attached to script? player/AI controlled
      [0xb0800d] (4e) ATTACH entity last entity ($0341) TO SCRIPT
      [0xb0800f] (09) IF (entity attached to script? == boy) == FALSE THEN SKIP 3 (to 0xb08019)
      [0xb08016] (52) SHOW TEXT 0003 FROM 0x91d003 uncompressed UNWINDOWED
              
      [0xb08019] (09) IF (entity attached to script? == $2834) == FALSE THEN SKIP 3 (to 0xb08025)
      [0xb08022] (52) SHOW TEXT 0006 FROM 0x91d006 uncompressed UNWINDOWED
              
      [0xb08025] (09) IF (entity attached to script? == entity attached to script?) == FALSE THEN SKIP 3 (to 0xb0802f)
      [0xb0802c] (52) SHOW TEXT 0009 FROM 0x91d009 uncompressed UNWINDOWED
              
      [0xb0802f] (52) SHOW TEXT 000c FROM 0x91d00c uncompressed UNWINDOWED
              
      [0xb08032] (52) SHOW TEXT 000c FROM 0x91d00c uncompressed UNWINDOWED
              
      [0xb08035] (00) END (return)




"Unnamed ABS script 0x99989b" = (addr:0x99989b)
    [0x99989b] (4e) ATTACH entity $283d TO SCRIPT
    4e 8d 09 00
    [0x99989f] (18) WRITE $249d = *(boy + 26)
    18 45 02 50 29 6a 1a d5
    [0x9998a7] (18) WRITE $249f = *(boy + 28)
    18 47 02 50 29 6c 1a d5
    [0x9998af] (18) WRITE $24a1 = *($283d + 26)
    18 49 02 0d 09 00 29 6a 1a d5
    [0x9998b9] (18) WRITE $24a3 = *($283d + 28)
    18 4b 02 0d 09 00 29 6c 1a d5
    [0x9998c3] (09) IF ($249d < $24a1) == FALSE THEN SKIP 13 (to 0x9998db)
    09 08 45 02 29 08 49 02 9e 0d 00
        [0x9998ce] (1a) WRITE SCRIPT arg0 = $24a1 - $249d
        1a 00 08 49 02 29 08 45 02 9b
        [0x9998d8] (04) SKIP 10 (to 0x9998e5)
        04 0a 00
    // else
        [0x9998db] (1a) WRITE SCRIPT arg0 = $249d - $24a1
        1a 00 08 45 02 29 08 49 02 9b
    [0x9998e5] (09) IF ($249f < $24a3) == FALSE THEN SKIP 13 (to 0x9998fd)
    09 08 47 02 29 08 4b 02 9e 0d 00
        [0x9998f0] (1a) WRITE SCRIPT arg2 = $24a3 - $249f
        1a 02 08 4b 02 29 08 47 02 9b
        [0x9998fa] (04) SKIP 10 (to 0x999907)
        04 0a 00
    // else
        [0x9998fd] (1a) WRITE SCRIPT arg2 = $249f - $24a3
        1a 02 08 47 02 29 08 4b 02 9b
    [0x999907] (09) IF (((signed arg0 <= 0x20) && (signed arg2 <= 0x20)) && (!($22dd&0x02))) == FALSE THEN SKIP 14 (to 0x99992c)
    09 12 00 29 02 20 20 29 12 02 29 02 20 20 28 29 05 29 04 14 a8 0e 00
        [0x99991e] (a9) UNTRACED INSTR modifies entity $283d bits 18
        a9 8d 09 00 e2
        [0x999923] (29) CALL 0x99992d Unnamed ABS script 0x99992d
        29 2d 99 03
        [0x999927] (a9) UNTRACED INSTR modifies entity $283d bits 16
        a9 8d 09 00 e0
    [0x99992c] (00) END (return)
    00


    [0x9998c3] (09) IF ($249d < $24a1) == FALSE THEN SKIP 13 (to 0x9998db)
    09 08 45 02 29 08 49 02 9e 0d 00
    [0xb0803f] (09) IF ($249d < $24a1) == FALSE THEN SKIP 11 (to 0xb08055)
    09 08 45 02 29 08 49 02 9e 0b 00


"Unnamed ABS script 0xb0801b" = (addr:0xb0801b)
    [0xb0801b] (4e) ATTACH entity $283d TO SCRIPT
    4e 8d 09 00
    [0xb0801f] (18) WRITE $249d = *(boy + 26)
    18 45 02 50 29 6a 1a d5
    [0xb08027] (18) WRITE $249f = *(boy + 28)
    18 47 02 50 29 6c 1a d5
    [0xb0802f] (18) WRITE $24a1 = *(entity attached to script? + 26)
    18 49 02 2e 29 6a 1a d5
    [0xb08037] (18) WRITE $24a3 = *(entity attached to script? + 28)
    18 4b 02 2e 29 6c 1a d5
    [0xb0803f] (09) IF ($249d < $24a1) == FALSE THEN SKIP 11 (to 0xb08055)
    09 08 45 02 29 08 49 02 9e 0b 00
        [0xb0804a] (19) WRITE $2834 = $24a1 - $249d
        19 00 00 08 49 02 29 08 45 02 9b
    // else
        [0xb08055] (19) WRITE $2834 = $249d - $24a1
        19 00 00 08 45 02 29 08 49 02 9b
    [0xb08060] (09) IF ($249f < $24a3) == FALSE THEN SKIP 11 (to 0xb08076)
    09 08 47 02 29 08 4b 02 9e 0b 00
        [0xb0806b] (19) WRITE $2836 = $24a3 - $249f
        19 02 00 08 4b 02 29 08 47 02 9b
    // else
        [0xb08076] (19) WRITE $2836 = $249f - $24a3
        19 02 00 08 47 02 29 08 4b 02 9b
    [0xb08081] (09) IF ($2834 <= 0x20) == FALSE THEN SKIP 11 (to 0xb08096)
    09 0e 00 00 29 02 20 a0 0b 00
        [0xb0808b] (09) IF ($2836 <= 0x20) == FALSE THEN SKIP 1 (to 0xb08096)
        09 0e 02 00 29 02 20 a0 01 00
            [0xb08095] (4d) NOP
            4d
    [0xb08096] (18) WRITE $2537 = $2834
    18 df 02 8e 00 00
    [0xb0809c] (18) WRITE $2539 = $2836
    18 e1 02 8e 02 00
    [0xb080a2] (52) SHOW TEXT 0012 FROM 0x91d012 uncompressed UNWINDOWED
    52 12 00
            
    [0xb080a5] (a7) SLEEP 31 TICKS
    a7 20
    [0xb080a7] (00) END (return)
    00

 



"Unnamed ABS script 0xb0801b" = (addr:0xb0801b)
[0xb0801b] (4e) ATTACH entity $283d TO SCRIPT
[0xb0801f] (18) WRITE $249d (boy.x) = *(boy + 26)
[0xb08027] (18) WRITE $249f (boy.y) = *(boy + 28)
[0xb0802f] (18) WRITE $24a1 (owner.x) = *(entity attached to script? + 26)
[0xb08037] (18) WRITE $24a3 (owner.y) = *(entity attached to script? + 28)
[0xb0803f] (09) IF ($249d (boy.x) < $24a1 (owner.x)) == FALSE THEN SKIP 11 (to 0xb08055)
    [0xb0804a] (19) WRITE $2834 = $24a1 (owner.x) - $249d (boy.x)
// else
    [0xb08055] (19) WRITE $2834 = $249d (boy.x) - $24a1 (owner.x)
[0xb08060] (09) IF ($249f (boy.y) < $24a3 (owner.y)) == FALSE THEN SKIP 11 (to 0xb08076)
    [0xb0806b] (19) WRITE $2836 = $24a3 (owner.y) - $249f (boy.y)
// else
    [0xb08076] (19) WRITE $2836 = $249f (boy.y) - $24a3 (owner.y)
[0xb08081] (09) IF ($2834 <= 0x20) == FALSE THEN SKIP 11 (to 0xb08096)
    [0xb0808b] (09) IF ($2836 <= 0x20) == FALSE THEN SKIP 1 (to 0xb08096)
        [0xb08095] (4d) NOP
[0xb08096] (18) WRITE $2537 = $2834
[0xb0809c] (18) WRITE $2539 = $2836
[0xb080a2] (52) SHOW TEXT 0012 FROM 0x91d012 uncompressed UNWINDOWED




    [15,0b:18,0c] = (id:1d4 => (202af@928468) => addr:0x9682af)
      [0x9682af] (2c) UNTRACED INSTR for script caller (0x08)
      [0x9682b1] (09) IF controlled char != dog SKIP 7 (to 0x9682bc)
      [0x9682b5] (29) CALL 0x92cd90 Nobilia market - no trade with dog
      [0x9682b9] (04) SKIP 193 (to 0x96837d)
      [0x9682bc] (09) IF !($225d&0x08) NOT(Market timer expired) SKIP 6 (to 0x9682c8)
      [0x9682c2] (a6) RCALL -570 (to 0x968088): Unknown
        [0x968088] (a3) CALL "Open message box?" (0x02)
        [0x96808a] (51) SHOW TEXT 0d8f FROM 0x91dd8f compressed WINDOWED
                c125b9> "[0x96]We're packing up to attend the big meeting.[PAUSE:5b] We'll be open "
                        "for business tomorrow.[0x86]"
        [0x96808d] (55) CLEAR TEXT
        [0x96808e] (00) END (return)
      [0x9682c5] (04) SKIP 181 (to 0x96837d)
      [0x9682c8] (a3) CALL "Open message box?" (0x02)
      [0x9682ca] (a6) RCALL -432 (to 0x96811a): Market (timer expired?) part [2]
        [0x96811a] (09) IF $225f&0x20 (Vigor defeated) SKIP 66 (to 0x968163)
        [0x968121] (18) WRITE $23b9 = RAND & 7
        [0x968128] (09) IF (!$23b9) == FALSE THEN SKIP 52 (to 0x968163)
        [0x96812f] (29) CALL 0x92cc6c Unknown script in square
        [0x968133] (1c) WRITE $2539 = $2515
        [0x968139] (09) IF ($2515 > 11) == FALSE THEN SKIP 4 (to 0x968146)
        [0x968142] (51) SHOW TEXT 0db9 FROM 0x91ddb9 compressed WINDOWED
                c1278f> "[0x96]The new leader's advisor has called a meeting in the city square.[0x86]We'll "
                        "be closing down in [0xa2] minutes.[0x86]"
        [0x968145] (00) END (return)
        [0x968146] (09) IF ($2515 > 8) == FALSE THEN SKIP 4 (to 0x968153)
        [0x96814f] (51) SHOW TEXT 0dbc FROM 0x91ddbc compressed WINDOWED
                c127ce> "[0x96]The big meeting is going to happen in [0xa2] minutes.[PAUSE:3d] That's "
                        "when the market closes.[0x86]"
        [0x968152] (00) END (return)
        [0x968153] (09) IF ($2515 > 3) == FALSE THEN SKIP 4 (to 0x968160)
        [0x96815c] (51) SHOW TEXT 0dbf FROM 0x91ddbf compressed WINDOWED
                c127ff> "[0x96]We'll be closing for the big meeting in [0xa2] minutes.[0x86]"
        [0x96815f] (00) END (return)
        [0x968160] (51) SHOW TEXT 0dc2 FROM 0x91ddc2 compressed WINDOWED
                c12822> "[0x96]The market is going to close any minute now for the big meeting.[0x86]"
        [0x968163] (00) END (return)
      [0x9682cd] (51) SHOW TEXT 0dd4 FROM 0x91ddd4 compressed WINDOWED
              c12918> "[0x96]My delicious rice is only 3 Jewels per bag.[0x86]"
      [0x9682d0] (9f) PREPARE CURRENCY DISPLAY
      [0x9682d1] (a0) SHOW CURRENCY AMOUNT
      [0x9682d2] (51) SHOW TEXT 0dd7 FROM 0x91ddd7 compressed WINDOWED
              c12938> "Would you like to purchase some rice?[PAUSE:3d][LF]"
                      "[0x97][0x8b]OK.[LF]"
                      "[0x8b]Not right now."
      [0x9682d5] (1d) WRITE $289d = Dialog response (preselect 0)
      [0x9682da] (09) IF $289d == FALSE THEN SKIP 7 (to 0x9682e7)
      [0x9682e0] (a1) HIDE CURRENCY DISPLAY
      [0x9682e1] (a6) RCALL -566 (to 0x9680ab): Market (timer expired?) part [3]
        [0x9680ab] (1a) WRITE SCRIPT arg0 = RANDRANGE(0,<16)
        [0x9680af] (09) IF (signed arg0 == 4) == FALSE THEN SKIP 6 (to 0x9680bd)
        [0x9680b7] (51) SHOW TEXT 0d9e FROM 0x91dd9e compressed WINDOWED
                c126b1> "[0x96][0x87]Kids_[PAUSE:3d] Always looking, never buying.[0x86]"
        [0x9680ba] (04) SKIP 45 (to 0x9680ea)
        [0x9680bd] (09) IF (signed arg0 == 8) == FALSE THEN SKIP 6 (to 0x9680cb)
        [0x9680c5] (51) SHOW TEXT 0da1 FROM 0x91dda1 compressed WINDOWED
                c126cf> "[0x96][0x87]How can you pass up my deals?[0x86]"
        [0x9680c8] (04) SKIP 31 (to 0x9680ea)
        [0x9680cb] (09) IF (signed arg0 == 7) == FALSE THEN SKIP 6 (to 0x9680d9)
        [0x9680d3] (51) SHOW TEXT 0da4 FROM 0x91dda4 compressed WINDOWED
                c126e5> "[0x96][0x87]Yeesh_[PAUSE:3d] Tourists![0x86]"
        [0x9680d6] (04) SKIP 17 (to 0x9680ea)
        [0x9680d9] (09) IF (signed arg0 > 12) == FALSE THEN SKIP 6 (to 0x9680e7)
        [0x9680e1] (51) SHOW TEXT 0da7 FROM 0x91dda7 compressed WINDOWED
                c126f7> "[0x96][0x87]Fine.[PAUSE:3d] Have a nice day![0x86]"
        [0x9680e4] (04) SKIP 3 (to 0x9680ea)
        [0x9680e7] (51) SHOW TEXT 0daa FROM 0x91ddaa compressed WINDOWED
                c1270b> "[0x87]"
"[0x96]OK. Maybe some other time.[0x86]"
        [0x9680ea] (1a) WRITE SCRIPT arg0 = RANDRANGE(0,<9)
        [0x9680ee] (09) IF (signed arg0 == 5) == FALSE THEN SKIP 3 (to 0x9680f9)
        [0x9680f6] (51) SHOW TEXT 0dad FROM 0x91ddad compressed WINDOWED
                c1271d> "[0x96][0x87]Now please make room for paying customers.[0x86]"
        [0x9680f9] (00) END (return)
      [0x9682e4] (04) SKIP 149 (to 0x96837c)
      [0x9682e7] (51) SHOW TEXT 0dda FROM 0x91ddda compressed WINDOWED
              c1295d> "[0x87]"
"[0x96]How many bags?[LF]"
                      "[0x8b]Five.[LF]"
                      "[0x8b]Ten.[LF]"
                      "[0x8b]Twenty."


      [0x9682ea] (1d) WRITE $289d = Dialog response (preselect 0)
      [0x9682ef] (19) WRITE $285b = 0x0000
      [0x9682f3] (09) IF (!$289d) == FALSE THEN SKIP 7 (to 0x968301)
      [0x9682fa] (19) WRITE $285b = 0x0005
      [0x9682fe] (04) SKIP 35 (to 0x968324)
      [0x968301] (09) IF ($289d == 1) == FALSE THEN SKIP 7 (to 0x968311)
      [0x96830a] (19) WRITE $285b = 0x000a
      [0x96830e] (04) SKIP 19 (to 0x968324)
      [0x968311] (09) IF ($289d == 2) == FALSE THEN SKIP 7 (to 0x968321)
      [0x96831a] (19) WRITE $285b = 0x0014
      [0x96831e] (04) SKIP 3 (to 0x968324)



      [0x968321] (a6) RCALL -630 (to 0x9680ab): Market (timer expired?) part [3]
        [0x9680ab] (1a) WRITE SCRIPT arg0 = RANDRANGE(0,<16)
        [0x9680af] (09) IF (signed arg0 == 4) == FALSE THEN SKIP 6 (to 0x9680bd)
        [0x9680b7] (51) SHOW TEXT 0d9e FROM 0x91dd9e compressed WINDOWED
                c126b1> "[0x96][0x87]Kids_[PAUSE:3d] Always looking, never buying.[0x86]"
        [0x9680ba] (04) SKIP 45 (to 0x9680ea)
        [0x9680bd] (09) IF (signed arg0 == 8) == FALSE THEN SKIP 6 (to 0x9680cb)
        [0x9680c5] (51) SHOW TEXT 0da1 FROM 0x91dda1 compressed WINDOWED
                c126cf> "[0x96][0x87]How can you pass up my deals?[0x86]"
        [0x9680c8] (04) SKIP 31 (to 0x9680ea)
        [0x9680cb] (09) IF (signed arg0 == 7) == FALSE THEN SKIP 6 (to 0x9680d9)
        [0x9680d3] (51) SHOW TEXT 0da4 FROM 0x91dda4 compressed WINDOWED
                c126e5> "[0x96][0x87]Yeesh_[PAUSE:3d] Tourists![0x86]"
        [0x9680d6] (04) SKIP 17 (to 0x9680ea)
        [0x9680d9] (09) IF (signed arg0 > 12) == FALSE THEN SKIP 6 (to 0x9680e7)
        [0x9680e1] (51) SHOW TEXT 0da7 FROM 0x91dda7 compressed WINDOWED
                c126f7> "[0x96][0x87]Fine.[PAUSE:3d] Have a nice day![0x86]"
        [0x9680e4] (04) SKIP 3 (to 0x9680ea)
        [0x9680e7] (51) SHOW TEXT 0daa FROM 0x91ddaa compressed WINDOWED
                c1270b> "[0x87]"
"[0x96]OK. Maybe some other time.[0x86]"
        [0x9680ea] (1a) WRITE SCRIPT arg0 = RANDRANGE(0,<9)
        [0x9680ee] (09) IF (signed arg0 == 5) == FALSE THEN SKIP 3 (to 0x9680f9)
        [0x9680f6] (51) SHOW TEXT 0dad FROM 0x91ddad compressed WINDOWED
                c1271d> "[0x96][0x87]Now please make room for paying customers.[0x86]"
        [0x9680f9] (00) END (return)


        
      [0x968324] (09) IF $285b == FALSE THEN SKIP 81 (to 0x96837b)
      [0x96832a] (8e) IF Currency ($2348)&0xff (moniez) >= $285b * 3 THEN SKIP 12 (to 0x968342)
      [0x968336] (18) WRITE $2463 = 0x0003
      [0x96833a] (a1) HIDE CURRENCY DISPLAY
      [0x96833b] (29) CALL 0x92cdb3 Can't buy (not enough ...)
      [0x96833f] (04) SKIP 54 (to 0x968378)
      [0x968342] (09) IF (($2527 + $285b) > 0x63) == FALSE THEN SKIP 11 (to 0x96835c)
      [0x968351] (18) WRITE $2463 = 0x0000
      [0x968355] (29) CALL 0x92cdbe Can't buy (inventory full)
      [0x968359] (04) SKIP 28 (to 0x968378)
      [0x96835c] (30) PLAY SOUND EFFECT 0x40 ??
      [0x96835e] (85) Take $285b * 3 Currency ($2348)&0xff (moniez)
      [0x968368] (1c) WRITE $2527 = $2527 + $285b
      [0x968373] (a0) SHOW CURRENCY AMOUNT
      [0x968374] (51) SHOW TEXT 0ddd FROM 0x91dddd compressed WINDOWED
              c1297f> "[0x96][0x87]It's a deal.[PAUSE:1f] Enjoy your rice.[0x86]"
      [0x968377] (a1) HIDE CURRENCY DISPLAY
      [0x968378] (04) SKIP 1 (to 0x96837c)
      [0x96837b] (a1) HIDE CURRENCY DISPLAY
      [0x96837c] (55) CLEAR TEXT
      [0x96837d] (2d) UNTRACED INSTR for script caller (0x08)
      [0x96837f] (00) END (return)


      {$7e2527} = $2d
      {$7e285b} = $05 // 00 -> 05 after select selcting 5 bags
      {$7e2348} = $03 // every frame during "show_currency"