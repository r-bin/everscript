#memory(
    string_key(0x0000)..string_key(0x232b), // all string keys
    function_key(0x0000)..function_key(0x232b), // TODO: all function keys?

    0x300000..0x3fffff, // extension

    <0x2272>
)
#include("in/core.evs")

#patch(
    // "void_maps",

    "skip_intro",
    // "brian",
    // "camera_hack",
    // "free_graveyard_ids",
    // "save_file_growth",

    // asm
    // "debug_menu", // uses 0x3f0000…???
    "_hook_input", // 0x3f0000…0x310000
        "hotkeys", // uses 0x3f00000…???
        // "room_timer", // uses 0x300000…???
    // "_hook_trigger",
)

// hotkeys

@install()
@inject(ADDRESS.HOTKEY_START)
fun hotkey_start() {
    subtext(string("Start[END]"));

    // drop_bomb();
}
@install()
@inject(ADDRESS.HOTKEY_START_L)
fun hotkey_start_l() {
    subtext(string("Start+L[END]"));
}
@install()
@inject(ADDRESS.HOTKEY_START_R)
fun hotkey_start_r() {
    subtext(string("Start+R[END]"));

    attribute_bit(CHARACTER.BOY, ATTRIBUTE_BITS.NO_CLIP);
}

// maps

@install(ADDRESS.INTRO_FIRST_CODE_EXECUTED)
fun intro_skip() {
    // act 1
    map_transition(raptors, south, DIRECTION.NONE);
    // map_transition(thraxx, south, DIRECTION.NONE);
    // map_transition(graveyard, south, DIRECTION.NONE);
    // map_transition(salabog, south, DIRECTION.NONE);
    // map_transition(magmar, south, DIRECTION.NONE);

    // act 2
    // map_transition(vigor, south, DIRECTION.NONE);
    // map_transition(megataur, south, DIRECTION.NONE);
    // map_transition(rimsala, south, DIRECTION.NONE);
    // map_transition(aquagoth, south, DIRECTION.NONE);

    // act 3
    // map_transition(footknight, east, DIRECTION.NONE);
    // map_transition(bad_boys, east, DIRECTION.NONE);
    // map_transition(timberdrake, south, DIRECTION.NONE);
    // map_transition(verminator, south, DIRECTION.NONE);
    // map_transition(sterling, south, DIRECTION.NONE);
    // map_transition(mungola, east_2, DIRECTION.NONE);

    // act 4
    // map_transition(face, south, DIRECTION.NONE);
    // map_transition(carltron, center, DIRECTION.NONE);

    // misc
    // map_transition(brians_room, center, DIRECTION.NONE);
}

// act 1

map raptors(0x5c) {
    enum entrance {
        north = entrance(0x1b, 0x03, DIRECTION.SOUTH),
        south = entrance(0x1d, 0x33, DIRECTION.NORTH),

        left = entrance(0x15, 0x1c, DIRECTION.NONE),
        center = entrance(0x1e, 0x21, DIRECTION.NONE),
        right = entrance(0x2a, 0x23, DIRECTION.NONE)
    }

    enum stepon_trigger {
        exit_north = @install() fun test() {
            subtext(string("exit? 0 [END]"));
            map_transition(raptors, south, DIRECTION.NORTH);
        },
        exit_south = @install() fun test() {
            subtext(string("exit? 1 [END]"));
            map_transition(raptors, north, DIRECTION.SOUTH);
        },
        center = @install() fun test() {
            subtext(string("exit? 2 [END]"));
        }
    }

    fun close_exits(close) {
        if(close) {
            object[0x04] = 0x04;
        } else {
            object[0x05] = 0x04;
        }
    }

    fun trigger_enter() {
        close_exits(False);

        fade_in();
    }
};

map thraxx(0x18) {
    enum entrance {
        south = entrance(0x17, 0x3f, DIRECTION.NORTH),
        north = entrance(0x18, 0x10, DIRECTION.SOUTH)
    }

    enum stepon_trigger {
        exit_north = @install() fun test() {
            subtext(string("exit? 0 [END]"));

            map_transition(thraxx, south, DIRECTION.NORTH);
        },
        trigger_boss = @install() fun test() {
            subtext(string("exit? 1 [END]"));
        },
        exit_south = @install() fun test() {
            subtext(string("exit? 2 [END]"));
            map_transition(thraxx, north, DIRECTION.SOUTH);
        }
    }

    enum b_trigger {
        cocoon = @install() fun test() {
            subtext(string("b? 0 [END]"));
        },
        rip_cage = @install() fun test() {
            subtext(string("b? 1 [END]"));
        }
    }

    fun show_thraxx(show) {
        if(show) {
            add_enemy(ENEMY.THRAXX_LEFT_ARM, 0x13, 0x0e);
            add_enemy(ENEMY.THRAXX_RIGHT_ARM, 0x1d, 0x0d);

            object[0x00] = 0x02;
            object[0x02] = 0x01;
            object[0x03] = 0x02;
        } else {
            object[0x00] = 0x02;
            object[0x01] = 0x02;
            object[0x02] = 0x02;
            object[0x03] = 0x02;
        }
    }

    fun show_cocoon(show) {
        if(show) {
            object[0x01] = 0x01;
        } else {
            object[0x01] = 0x00;
        }
    }

    fun trigger_enter() {
        show_thraxx(False);
        // show_cocoon();

        fade_in();
    }
};

map graveyard(0x27) {
    enum entrance {
        north = entrance(0x32, 0x0f, DIRECTION.SOUTH),
        south = entrance(0x2f, 0x5f, DIRECTION.NORTH)
    }

    enum stepon_trigger {
        exit_north = @install() fun test() {
            subtext(string("exit? 0 [END]"));
        },
        exit_south = @install() fun test() {
            subtext(string("exit? 1 [END]"));
        },
        spawn_boss = @install() fun test() {
            subtext(string("exit? 2 [END]"));
        }
    }

    enum b_trigger {
        b_trigger_0 = @install() fun test() {
            subtext(string("b? 0 [END]"));
        },
        b_trigger_1 = @install() fun test() {
            subtext(string("b? 1 [END]"));
        },
        b_trigger_2 = @install() fun test() {
            subtext(string("b? 2 [END]"));
        },
        b_trigger_3 = @install() fun test() {
            subtext(string("b? 3 [END]"));
        },
        b_trigger_4 = @install() fun test() {
            subtext(string("b? 4 [END]"));
        },
        b_trigger_5 = @install() fun test() {
            subtext(string("b? 5 [END]"));
        },
        b_trigger_6 = @install() fun test() {
            subtext(string("b? 6 [END]"));
        },
        b_trigger_7 = @install() fun test() {
            subtext(string("b? 7 [END]"));
        },
        b_trigger_8 = @install() fun test() {
            subtext(string("b? 8 [END]"));
        },
        b_trigger_9 = @install() fun test() {
            subtext(string("b? 9 [END]"));
        },

        b_trigger_10 = @install() fun test() {
            subtext(string("b? 10 [END]"));
        },
        b_trigger_11 = @install() fun test() {
            subtext(string("b? 11 [END]"));
        },
        b_trigger_12 = @install() fun test() {
            subtext(string("b? 12 [END]"));
        },
        b_trigger_13 = @install() fun test() {
            subtext(string("b? 13 [END]"));
        },
        b_trigger_14 = @install() fun test() {
            subtext(string("b? 14 [END]"));
        },
        b_trigger_15 = @install() fun test() {
            subtext(string("b? 15 [END]"));
        },
        b_trigger_16 = @install() fun test() {
            subtext(string("b? 16 [END]"));
        },
        b_trigger_17 = @install() fun test() {
            subtext(string("b? 17 [END]"));
        },
        b_trigger_18 = @install() fun test() {
            subtext(string("b? 18 [END]"));
        },
        b_trigger_19 = @install() fun test() {
            subtext(string("b? 19 [END]"));
        },

        b_trigger_20 = @install() fun test() {
            subtext(string("b? 20 [END]"));
        },
        b_trigger_21 = @install() fun test() {
            subtext(string("b? 21 [END]"));
        },
        b_trigger_22 = @install() fun test() {
            subtext(string("b? 22 [END]"));
        },
        b_trigger_23 = @install() fun test() {
            subtext(string("b? 23 [END]"));
        },
        b_trigger_24 = @install() fun test() {
            subtext(string("b? 24 [END]"));
        },
        b_trigger_25 = @install() fun test() {
            subtext(string("b? 25 [END]"));
        },
        b_trigger_26 = @install() fun test() {
            subtext(string("b? 26 [END]"));
        },
        b_trigger_27 = @install() fun test() {
            subtext(string("b? 27 [END]"));
        },
        b_trigger_28 = @install() fun test() {
            subtext(string("b? 28 [END]"));
        },
        b_trigger_29 = @install() fun test() {
            subtext(string("b? 29 [END]"));
        }
    }

    fun trigger_enter() {
        fade_in();
    }
};

map salabog(0x01) {
    enum entrance {
        hut = entrance(0x1b, 0x11, DIRECTION.SOUTH),
        south = entrance(0x1c, 0x61, DIRECTION.NORTH)
    }

    enum stepon_trigger {
        exit_hut = @install() fun test() {
            subtext(string("exit? 0 [END]"));
        },
        exit_south = @install() fun test() {
            subtext(string("exit? 1 [END]"));
        },
        spawn_boss = @install() fun test() {
            subtext(string("exit? 2 [END]"));
        }
    }

    fun trigger_enter() {
        fade_in();
    }
};

map magmar(0x3f) {
    enum entrance {
        south = entrance(0x18, 0x47, DIRECTION.NORTH)
    }

    enum stepon_trigger {
        exit_south = @install() fun test() {
            subtext(string("exit? 0 [END]"));
        }
    }

    fun trigger_enter() {
        fade_in();
    }
};

// act 2

map vigor(0x1d) {
    enum entrance {
        north_cinematic = entrance(0x20, 0x07, DIRECTION.NONE),
        south = entrance(0x22, 0x69, DIRECTION.NORTH) // 0x22, 0x6a
    }

    fun trigger_enter() {
        fade_in();
    }
};

map megataur(0x2a) {
    enum entrance {
        south = entrance(0x41, 0x53, DIRECTION.NORTH)
    }

    enum stepon_trigger {
        exit_south = @install() fun test() {
            subtext(string("exit? 0 [END]"));
        }
    }

    fun trigger_enter() {
        fade_in();
    }
};

map rimsala(0x58) {
    enum entrance {
        south = entrance(0x21, 0x3e, DIRECTION.NORTH)
    }

    enum stepon_trigger {
        exit_south = @install() fun test() {
            subtext(string("exit? 0 [END]"));
        },
        stepon_1 = @install() fun test() {
            subtext(string("exit? 1 [END]"));
        },
        spawn_boss_2 = @install() fun test() {
            subtext(string("exit? 2 [END]"));
        },
        stepon_3 = @install() fun test() {
            subtext(string("exit? 3 [END]"));
        },
        spawn_boss_1 = @install() fun test() {
            subtext(string("exit? 4 [END]"));
        }
    }

    fun trigger_enter() {
        fade_in();
    }
};

map aquagoth(0x6d) {
    enum entrance {
        south = entrance(0x1b, 0x51, DIRECTION.NORTH)
    }

    fun trigger_enter() {
        fade_in();
    }
};

// act 3

map footknight(0x19) {
    enum entrance {
        east = entrance(0x93, 0x42, DIRECTION.WEST),
        west = entrance(0x01, 0x42, DIRECTION.EAST),
        stairs_east = entrance(0x53, 0x4c, DIRECTION.WEST),
        stairs_west = entrance(0x40, 0x40, DIRECTION.EAST) // 0x4c, 0x40
    }

    enum stepon_trigger {
        stairs_east = @install() fun test() {
            subtext(string("exit? 0 [END]"));
            map_transition(footknight, stairs_west, DIRECTION.EAST);
        },
        spawn_boss = @install() fun test() {
            subtext(string("exit? 1 [END]"));
        },
        exit_west = @install() fun test() {
            subtext(string("exit? 2 [END]"));
            map_transition(footknight, east, DIRECTION.WEST);
        },
        exit_east = @install() fun test() {
            subtext(string("exit? 3 [END]"));
            map_transition(footknight, west, DIRECTION.EAST);
        },
        stairs_west = @install() fun test() {
            subtext(string("exit? 4 [END]"));
            map_transition(footknight, stairs_east, DIRECTION.WEST);
        }
    }

    enum b_trigger {
        b_trigger_0 = @install() fun test() {
            subtext(string("b? 0 [END]"));
        },
        b_trigger_1 = @install() fun test() {
            subtext(string("b? 1 [END]"));
        },
        b_trigger_2 = @install() fun test() {
            subtext(string("b? 2 [END]"));
        },
        b_trigger_3 = @install() fun test() {
            subtext(string("b? 3 [END]"));
        },
        b_trigger_4 = @install() fun test() {
            subtext(string("b? 4 [END]"));
        },
        b_trigger_5 = @install() fun test() {
            subtext(string("b? 5 [END]"));
        },
        b_trigger_6 = @install() fun test() {
            subtext(string("b? 6 [END]"));
        },
        b_trigger_7 = @install() fun test() {
            subtext(string("b? 7 [END]"));
        },
        b_trigger_8 = @install() fun test() {
            subtext(string("b? 8 [END]"));
        },
        b_trigger_9 = @install() fun test() {
            subtext(string("b? 9 [END]"));
        },

        b_trigger_10 = @install() fun test() {
            subtext(string("b? 10 [END]"));
        },
        b_trigger_11 = @install() fun test() {
            subtext(string("b? 11 [END]"));
        },
        b_trigger_12 = @install() fun test() {
            subtext(string("b? 12 [END]"));
        },
        b_trigger_13 = @install() fun test() {
            subtext(string("b? 13 [END]"));
        },
        b_trigger_14 = @install() fun test() {
            subtext(string("b? 14 [END]"));
        },
        b_trigger_15 = @install() fun test() {
            subtext(string("b? 15 [END]"));
        },
        b_trigger_16 = @install() fun test() {
            subtext(string("b? 16 [END]"));
        },
        b_trigger_17 = @install() fun test() {
            subtext(string("b? 17 [END]"));
        },
        b_trigger_18 = @install() fun test() {
            subtext(string("b? 18 [END]"));
        }
    }

    fun trigger_enter() {
        fade_in();
    }
};

map bad_boys(0x1f) {
    enum entrance {
        east = entrance(0x63, 0x1d, DIRECTION.WEST),
        west = entrance(0x01, 0x21, DIRECTION.EAST)
    }

    enum stepon_trigger {
        exit_east = @install() fun test() {
            subtext(string("exit? 0 [END]"));
        },
        exit_west = @install() fun test() {
            subtext(string("exit? 1 [END]"));
        }
    }

    fun trigger_enter() {
        fade_in();
    }
};

map timberdrake(0x20) {
    enum entrance {
        east = entrance(0x2b, 0x15, DIRECTION.WEST),
        south = entrance(0x1b, 0x29, DIRECTION.NORTH)
    }

    enum stepon_trigger {
        exit_east = @install() fun test() {
            subtext(string("exit? 0 [END]"));
        },
        exit_south = @install() fun test() {
            subtext(string("exit? 1 [END]"));
        }
    }

    fun trigger_enter() {
        fade_in();
    }
};

map verminator(0x5e) {
    enum entrance {
        north = entrance(0x16, 0x09, DIRECTION.SOUTH),
        east = entrance(0x29, 0x38, DIRECTION.WEST),
        south = entrance(0x16, 0x65, DIRECTION.NORTH),
        west = entrance(0x03, 0x38, DIRECTION.EAST),
        stairs = entrance(0x19, 0x4d, DIRECTION.WEST)
    }

    enum stepon_trigger {
        exit_north = @install() fun test() {
            subtext(string("exit? 0 [END]"));
        },
        stepon_1 = @install() fun test() {
            subtext(string("exit? 1 [END]"));
        },
        stepon_2 = @install() fun test() {
            subtext(string("exit? 2 [END]"));
        },
        stepon_3 = @install() fun test() {
            subtext(string("exit? 3 [END]"));
        },
        stepon_4 = @install() fun test() {
            subtext(string("exit? 4 [END]"));
        },
        spawn_boss = @install() fun test() {
            subtext(string("exit? 5 [END]"));
        },
        exit_stairs = @install() fun test() {
            subtext(string("exit? 6 [END]"));
            map_transition(verminator, south, DIRECTION.WEST);
        },
        exit_south = @install() fun test() {
            subtext(string("exit? 7 [END]"));
            map_transition(verminator, north, DIRECTION.SOUTH);
        },
        exit_west = @install() fun test() {
            subtext(string("exit? 8 [END]"));
            map_transition(verminator, east, DIRECTION.WEST);
        },
        exit_east = @install() fun test() {
            subtext(string("exit? 9 [END]"));
            map_transition(verminator, west, DIRECTION.EAST);
        }
    }

    fun trigger_enter() {
        fade_in();
    }
};

map sterling(0x37) {
    enum entrance {
        south = entrance(0x55, 0xf9, DIRECTION.NORTH),
        platform = entrance(0x51, 0x2f, DIRECTION.NORTH)
    }

    enum stepon_trigger {
        elevator_bottom = @install() fun test() {
            subtext(string("exit? 0 [END]"));
        },
        elevator_top = @install() fun test() {
            subtext(string("exit? 1 [END]"));
        },
        spawn_boss = @install() fun test() {
            subtext(string("exit? 2 [END]"));
        },
        trapdoor_4 = @install() fun test() {
            subtext(string("exit? 3 [END]"));
        },
        exit_south = @install() fun test() {
            subtext(string("exit? 4 [END]"));
            map_transition(sterling, platform, DIRECTION.SOUTH);
        },
        trapdoor_1 = @install() fun test() {
            subtext(string("exit? 5 [END]"));
        },
        stepon_6 = @install() fun test() {
            subtext(string("exit? 6 [END]"));
        },
        stepon_7 = @install() fun test() {
            subtext(string("exit? 7 [END]"));
        },
        trapdoor_2 = @install() fun test() {
            subtext(string("exit? 8 [END]"));
        },
        stepon_9 = @install() fun test() {
            subtext(string("exit? 9 [END]"));
        },

        trapdoor_3 = @install() fun test() {
            subtext(string("exit? 10 [END]"));
        },
        stepon_11 = @install() fun test() {
            subtext(string("exit? 11 [END]"));
        }
    }

    enum b_trigger {
        b_trigger_0 = @install() fun test() {
            subtext(string("b? 0 [END]"));
        },
        b_trigger_1 = @install() fun test() {
            subtext(string("b? 1 [END]"));
        },
        b_trigger_2 = @install() fun test() {
            subtext(string("b? 2 [END]"));
        },
        b_trigger_3 = @install() fun test() {
            subtext(string("b? 3 [END]"));
        },
        b_trigger_4 = @install() fun test() {
            subtext(string("b? 4 [END]"));
        },
        b_trigger_5 = @install() fun test() {
            subtext(string("b? 5 [END]"));
        },
        b_trigger_6 = @install() fun test() {
            subtext(string("b? 6 [END]"));
        },
        b_trigger_7 = @install() fun test() {
            subtext(string("b? 7 [END]"));
        },
        b_trigger_8 = @install() fun test() {
            subtext(string("b? 8 [END]"));
        },
        b_trigger_9 = @install() fun test() {
            subtext(string("b? 9 [END]"));
        },

        b_trigger_10 = @install() fun test() {
            subtext(string("b? 10 [END]"));
        },
        b_trigger_11 = @install() fun test() {
            subtext(string("b? 11 [END]"));
        },
        b_trigger_12 = @install() fun test() {
            subtext(string("b? 12 [END]"));
        },
        b_trigger_13 = @install() fun test() {
            subtext(string("b? 13 [END]"));
        },
        b_trigger_14 = @install() fun test() {
            subtext(string("b? 14 [END]"));
        },
        b_trigger_15 = @install() fun test() {
            subtext(string("b? 15 [END]"));
        },
        b_trigger_16 = @install() fun test() {
            subtext(string("b? 16 [END]"));
        },
        b_trigger_17 = @install() fun test() {
            subtext(string("b? 17 [END]"));
        },
        b_trigger_18 = @install() fun test() {
            subtext(string("b? 18 [END]"));
        },
        b_trigger_19 = @install() fun test() {
            subtext(string("b? 19 [END]"));
        },

        b_trigger_20 = @install() fun test() {
            subtext(string("b? 20 [END]"));
        },
        b_trigger_21 = @install() fun test() {
            subtext(string("b? 21 [END]"));
        }
    }

    fun trigger_enter() {
        fade_in();
    }
};

map mungola(0x77) {
    enum entrance {
        east_1 = entrance(0x39, 0x15, DIRECTION.WEST),
        east_2 = entrance(0x39, 0x24, DIRECTION.WEST)
    }

    enum stepon_trigger {
        stairs = @install() fun test() {
            subtext(string("exit? 0 [END]"));
        },
        exit_east_1 = @install() fun test() {
            subtext(string("exit? 1 [END]"));
        },
        exit_east_2 = @install() fun test() {
            subtext(string("exit? 2 [END]"));
        }
    }

    fun trigger_enter() {
        fade_in();
    }
};

// act 4

map face(0x45) {
    enum entrance {
        south = entrance(0x3a, 0x4e, DIRECTION.NONE)
    }

    enum stepon_trigger {
        exit_south = @install() fun test() {
            subtext(string("exit? 0 [END]"));
        },
        spawn_boss = @install() fun test() {
            subtext(string("exit? 1 [END]"));
        }
    }

    fun trigger_enter() {
        fade_in();
    }
};

map carltron(0x4a) {
    enum entrance {
        center = entrance(0x14, 0x25, DIRECTION.NONE)
    }

    enum stepon_trigger {
        stairs = @install() fun test() {
            subtext(string("exit? 0 [END]"));
        },
        fans = @install() fun test() {
            subtext(string("exit? 1 [END]"));
        }
    }

    enum b_trigger {
        b_trigger_0 = @install() fun test() {
            subtext(string("b? 0 [END]"));
        },
        b_trigger_1 = @install() fun test() {
            subtext(string("b? 1 [END]"));
        },
        b_trigger_2 = @install() fun test() {
            subtext(string("b? 2 [END]"));
        },
        b_trigger_3 = @install() fun test() {
            subtext(string("b? 3 [END]"));
        },
        b_trigger_4 = @install() fun test() {
            subtext(string("b? 4 [END]"));
        },
        b_trigger_5 = @install() fun test() {
            subtext(string("b? 5 [END]"));
        },
        b_trigger_6 = @install() fun test() {
            subtext(string("b? 6 [END]"));
        },
        b_trigger_7 = @install() fun test() {
            subtext(string("b? 7 [END]"));
        }
    }

    fun trigger_enter() {
        fade_in();
    }
};

// misc

map brians_room(MAP.BRIAN) {
    enum entrance {
        center = entrance(0x17, 0x19, DIRECTION.NONE)
    }

    fun trigger_enter() {
        fade_in();
    }
};