#memory(
    string_key(0x0000)..string_key(0x232b), // all string keys
    function_key(0x0000)..function_key(0x232b), // TODO: all function keys?

    0x300000..0x3fffff, // extension

    <0x2272>
)
#include("in/core.evs")

#patch(
    "skip_intro",
)

@install(ADDRESS.INTRO_FIRST_CODE_EXECUTED)
fun intro_skip() {
    map_transition(thraxx, south, DIRECTION.NONE);
}

// maps

map thraxx(0x18) {
    enum entrance {
        south = entrance(0x17, 0x3f, DIRECTION.NORTH),
        north = entrance(0x18, 0x10, DIRECTION.SOUTH)
    }

    enum soundtrack {
        default = soundtrack(MUSIC.JUNGLE_AMBIENT_BIRDS, 0xff)
    }

    enum stepon_trigger {
        exit_north = @install() fun test() {
            subtext(string("exit? 0 [END]"));

            map_transition(raptors, south, DIRECTION.NORTH);
        },
        trigger_boss = @install() fun test() {
            subtext(string("exit? 1 [END]"));
        },
        exit_south = @install() fun test() {
            subtext(string("exit? 2 [END]"));
            map_transition(raptors, north, DIRECTION.SOUTH);
        }
    }

    enum b_trigger {
        cocoon = @install() fun test() {
            subtext(string("b? 0 [END]"));
        },
        rip_cage = @install() fun test() {
            subtext(string("b? 1 [END]"));
        }
    }

    fun show_thraxx(show) {
        if(show) {
            add_enemy(ENEMY.THRAXX_LEFT_ARM, 0x13, 0x0e);
            add_enemy(ENEMY.THRAXX_RIGHT_ARM, 0x1d, 0x0d);

            object[0x00] = 0x02;
            object[0x02] = 0x01;
            object[0x03] = 0x02;
        } else {
            object[0x00] = 0x02;
            object[0x01] = 0x02;
            object[0x02] = 0x02;
            object[0x03] = 0x02;
        }
    }

    fun show_cocoon(show) {
        if(show) {
            object[0x01] = 0x01;
        } else {
            object[0x01] = 0x00;
        }
    }

    fun trigger_enter() {
        show_thraxx(False);
        // show_cocoon();

        fade_in();
    }
};

map raptors(0x5c) {
    enum entrance {
        north = entrance(0x1b, 0x03, DIRECTION.SOUTH),
        south = entrance(0x1d, 0x33, DIRECTION.NORTH),

        left = entrance(0x15, 0x1c, DIRECTION.NONE),
        center = entrance(0x1e, 0x21, DIRECTION.NONE),
        right = entrance(0x2a, 0x23, DIRECTION.NONE)
    }

    enum soundtrack {
        default = soundtrack(MUSIC.BUGMUCK_AMBIENT_MELODY, 0xff)
    }

    enum stepon_trigger {
        exit_north = @install() fun test() {
            subtext(string("exit? 0 [END]"));
            map_transition(thraxx, south, DIRECTION.NORTH);
        },
        exit_south = @install() fun test() {
            subtext(string("exit? 1 [END]"));
            map_transition(thraxx, north, DIRECTION.SOUTH);
        },
        center = @install() fun test() {
            subtext(string("exit? 2 [END]"));
        }
    }

    fun close_exits(close) {
        if(close) {
            object[0x04] = 0x04;
        } else {
            object[0x05] = 0x04;
        }
    }

    fun trigger_enter() {
        close_exits(False);

        fade_in();
    }
};
