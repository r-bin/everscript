enum ADDRESS {
    SOUTH_JUNGLE_ENTER = 0x9384d9,
    SOUTH_JUNGLE_ENTER_GOURD_1 = 0x93802b,

    FE_EXIT_NORTH = 0x94bead,
    FE_EXIT_NORTH_GATED = 0x94bedc,
    FE_EXIT_EAST = 0x94be9f,
    FE_EXIT_SOUTH = 0x94be91,
    FE_EXIT_WEST = 0x94bee2,

    RAPTORS_EXIT_ENTER = 0x93912c,
    RAPTORS_EXIT_NORTH = 0x93873f,
    RAPTORS_EXIT_SOUTH = 0x93874d,
    RAPTORS_STEP_ON_FIGHT = 0x93875f,
    RAPTORS_BUSH_WIGGLE = 0x938da0,

    THRAXX_EXIT_NORTH = 0x93c6d8,
    THRAXX_EXIT_SOUTH = 0x93c6ae,

    SALABOG_EXIT_SOUTH = 0x9786e4,
    SALABOG_EXIT_NORTH = 0x9786ec,

    BRIAN_MAP_POINTER = 0x928084,
    BRIAN_ENTER = 0x928000
}

enum MEMORY {
    DOG = <0x2443>,
    GAIN_WEAPON = <0x2441>,
    QUESTION_ANSWER = <0x289d>,
    
    ENTITY_1 = <0x2835>,
    ENTITY_2 = <0x2837>,
    ENTITY_3 = <0x2839>,
    ENTITY_4 = <0x283b>,
    ENTITY_5 = <0x283d>,
    LAST_ENTITY = <0x0341>,

    BOY_LEVEL = <0x0A50>,
    BOY_CURRENT_HP = <0x4EB3>,
    BOY_XP_REQUIRED = <0x4F1D>,

    CRYSTAL = <0x230E>,
    CLAY = <0x230F>
}

enum MAP {
    START = 0x00,
    STRONGHEART = 0x34,
    RAPTORS = 0x5c,
    FE_VILLAGE = 0x25,
    THRAXX = 0x18,
    MAGMAR = 0x3f,
    SALABOG = 0x01,
    
    BRIAN = 0x15
}

enum DOG {
    WOLF = 0x2,
    WOLF2 = 0x4,
    GREYHOUND = 0x6,
    POODLE = 0x8,
    PUPPER = 0xa,
    TOASTER = 0xc
}

enum CHARACTER {
    BOY = 0xd0,
    DOG = 0xd1,
    ACTIVE = 0xd2,
    INACTIVE = 0xd3,

    BOTH = 0x00,
    NONE = 0x01
}

enum MUSIC {
    START = 0x12,
    RAPTORS = 0x0a,
    THRAXX = 0x04,

    FANFARE = 0x78
}

enum DIRECTION {
    NORTH = 0x26,
    EAST = 0x1d,
    SOUTH = 0x21,
    WEST = 0x19,
    
    UNKNOWN = 0x00
}

enum FLAG {
    RAPTORS = <0x225f, 0x40>,
    THRAXX = <0x2260, 0x10>,
    MAGMAR = <0x2260, 0x40>,
    SALABOG = <0x22f3, 0x20>,

    GOURD_1 = <0x2268, 0x40>,
    
    IN_ANIMATION = <0x22eb, 0x20>,

    RANDOM_1 = <0x2266, 0x01>,
    RANDOM_2 = <0x2266, 0x02>,
    RANDOM_3 = <0x2266, 0x04>,
    RANDOM_4 = <0x2266, 0x08>,
    RANDOM_5 = <0x2266, 0x10>,
    RANDOM_6 = <0x2266, 0x20>,
    RANDOM_7 = <0x2266, 0x30>,
    RANDOM_8 = <0x2266, 0x40>,

    JAGUAR_RING = <0x2262, 0x02>,

    DOG_UNAVAILABLE = <0x2261, 0x01>,
    BLIMP_BRIDGE = <0x225f, 0x01>
}

enum ENEMY {
    FLOWER = 0x0b,
    MOSQUITO = 0x1e,
    RAPTOR_RED = 0x1a,
    LEAF = 0x40 // ?
}

enum FLAG_ENEMY {
    NORMAL = 0x0000,
    PHASING = 0x0400,
    INACTIVE = 0x0020,
    INACTIVE_IMORTAL = 0x0022,

    MOSQUITO = 0x0040
}

enum ITEM {
    ALL = 0x0000,

    JAGUAR_RING = 0x0100,

    SPEAR_1 = 0x0200,
    SPEAR_2 = 0x0201,
    SPEAR_3 = 0x0202,
    AXE_1 = 0x0210,
    
    HARD_BALL = 0x0300,
    ACID_RAIN = 0x0301,
    FLASH = 0x0302,

    WINGS = 0x0400,
    PETAL = 0x0401,
    NECTAR = 0x0402
}

enum ALCHEMY_INDEX {
    FLASH = 0x1e
}

fun end() {
    code(0x00, "// (00) END (return)");
}

fun fade_out() {
    code(0x27, "// (27) Fade-out screen (WRITE $0b83=0x8000)");
}
fun fade_out_stop_music() {
    code(0xa3, 0x00, "// (a3) CALL "Fade-out / stop music" (0x00)");
}
fun load_map(map, x, y) {
    code(0x22, x, y, map, 0x00, "// (22) CHANGE MAP = 0x34 @ [ 0x0090 | 0x0118 ]: ...");
}
fun prepare_transition(direction_in, direction_out) {
    eval("0c 9d 04 b1 // (0c) $22eb |= 0x20 (in animation)");
    eval("18 37 01 b3 // (18) WRITE $238f = 0x0003");
    eval("27 // (27) Fade-out screen (WRITE $0b83=0x8000)");
    code(0xa3, direction_out, "// (a3) CALL "Prepare room change? North exit/south entrance outdoor-indoor?" (0x26)");
    eval("a7 10 // (a7) SLEEP 15 TICKS");
}

fun transition(map, x, y, direction_in, direction_out) {
    fade_out_stop_music();
    prepare_transition(direction_in, direction_out);
    load_map(map, x, y);
}

fun teleport(character, x, y) {
    if(character == CHARACTER.BOTH) {
        code(0x20, x, y, "// (20) Teleport both to 43 93");
    } else {
        code(0x42, character, y, x, "// 42) Teleport boy to 1f, 17");
    }
}

fun init_map(x_start, y_start, x_end, y_end) {
    code(0x1b, 0x23e9 - 0x2258, 0x23eb - 0x2258, x_start, y_start, "// (1b) WRITE MAP X start ($23e9) = 0x0000  (1b) WRITE MAP Y start ($23eb) = 0x0010");
    code(0x1b, 0x23ed - 0x2258, 0x23ef - 0x2258, x_end, y_end, "// (1b) WRITE MAP X end   ($23ed) = 0x0400  (1b) WRITE MAP Y end   ($23ef) = 0x04b0");
}

fun music(music) {
    code(0x33, music, "// PLAY MUSIC 0x12");
}
fun music_volume(music, volume) {
    music(music);
    code(0x86, 0x82, volume, "// (86) SET AUDIO volume to 0x64");
}

fun price(index, rate, drop, quantity) {
    if(index == 0x1) {
        <0x239b> = rate;
        <0x23a1> = drop;
        <0x23a7> = quantity;
    } else if(index == 0x2) {
        <0x239d> = rate;
        <0x23a3> = drop;
        <0x23a9> = quantity;
    } else if(index == 0x3) {
        <0x239f> = rate;
        <0x23a5> = drop;
        <0x23ab> = quantity;
    }
}

fun add_enemy(enemy, x, y) {
    code(0xba, enemy, x, y, "// (ba) LOAD NPC 0b at 49 79");
}

fun add_enemy_with_flags(enemy, x, y, flags) {
    code(0x3c, 0x0000 + enemy, flags, x, y, "// (ba) LOAD NPC 0b at 49 79");
}

fun control(character) {
    if(character == CHARACTER.NONE) {
        code(0xc0, "// (c0) BOY+DOG = STOPPED");
    } else if(character == CHARACTER.BOTH) {
        code(0xc1, "// (c1) BOY+DOG = Player controlled");
    }
}

fun text_start() {
    control(CHARACTER.NONE);
    code(0xa3, 0x02, "// (a3) CALL "Open message box?" (0x02)");
}
fun text(id) {
    code(0x51, id, "// (51) SHOW TEXT 10bf FROM 0x91e0bf compressed WINDOWED c14dd8> '[0x97][0x8b]Goat[LF]' '[0x8b]Chicken[LF]' '[0x8b]Basket'");
}
fun text_end() {
    code(0x55, "// (55) CLEAR TEXT");
    
    control(CHARACTER.BOTH);
}

fun subtext(id) {
    code(0x52, id, "// (52) SHOW TEXT 066f FROM 0x91d66f compressed UNWINDOWED c03ad9> 'Received Jaguar Ring'");
}

fun question(id) {
    text_start();

    text(id);
    
    eval("1d 69 00 30 ac // (1d) WRITE $289d = Dialog response (preselect 0)");
    
    text_end();
}

fun dialog(id) {
    text_start();

    text(id);

    text_end();
}

fun sleep(ticks) {
    code(0xa7, ticks, "// (a7) SLEEP 59 TICKS");
}

fun fanfare() {
    code(0xa3, 0x00, "// (a3) CALL "Fade-out / stop music" (0x00)");
    music(MUSIC.FANFARE);
    code(0xa3, 0x01, "// (a3) CALL "Fade-in / start music" (0x01)");
}
fun fanfare_item() {
    fanfare();
}
fun fanfare_weapon() {
    control(CHARACTER.NONE);
    eval("29 33 3f 00 // (29) CALL 0x92bf33 Hold up weapon");

    sleep(0x08);
    fanfare();
        
    sleep(0xc8);
    control(CHARACTER.BOTH);
}

fun unlock(item) {
    if(item == ITEM.HARD_BALL) {
        set(<0x225a, 0x02>);
    } else if(item == ITEM.FLASH) {
        set(<0x2259, 0x80>);
    } else if(item == ITEM.ACID_RAIN) {
        set(<0x2258, 0x01>);
    } else if(item == ITEM.ALL) {
        // alchemy
        <0x2258> = 0xff;
        <0x2259> = 0xff;
        <0x225A> = 0xff;
        <0x225B> = 0xff;
        <0x225C> = 0xff;
        <0x225D> = 0xff;

        // charms
        <0x2261> = 0xf4;
        <0x2262> = 0xff;
        <0x2263> = 0xff;
        <0x2264> = 0xff;

        // weapons
        <0x22DA> = 0xff;
        <0x22DB> = 0xff;

        // ingredients
        <0x22FF> = 0xff;
        <0x2300> = 0xff;
        <0x2301> = 0xff;
        <0x2302> = 0xff;
        <0x2303> = 0xff;
        <0x2304> = 0xff;
        <0x2305> = 0xff;
        <0x2306> = 0xff;
        <0x2307> = 0xff;
        <0x2308> = 0xff;
        <0x2309> = 0xff;
        <0x230A> = 0xff;
        <0x230B> = 0xff;
        <0x230C> = 0xff;
        <0x230D> = 0xff;
        <0x230E> = 0xff;
        <0x230F> = 0xff;
        <0x2310> = 0xff;
        <0x2311> = 0xff;
        <0x2312> = 0xff;
        <0x2313> = 0xff;
        <0x2314> = 0xff;
        <0x2315> = 0xff;

        // consumables
        <0x2316> = 0xff;
        <0x2317> = 0xff;
        <0x2318> = 0xff;
        <0x2319> = 0xff;
        <0x231A> = 0xff;
        <0x231B> = 0xff;
        <0x231C> = 0xff;
        <0x231D> = 0xff;

        // armor
        <0x231E> = 0xff;
        <0x231F> = 0xff;
        <0x2320> = 0xff;
        <0x2321> = 0xff;
        <0x2322> = 0xff;
        <0x2323> = 0xff;
        <0x2324> = 0xff;
        <0x2325> = 0xff;
        <0x2326> = 0xff;
        <0x2327> = 0xff;
        <0x2328> = 0xff;
        <0x2329> = 0xff;
        <0x232A> = 0xff;
        <0x232B> = 0xff;
        <0x232C> = 0xff;
        <0x232D> = 0xff;
        <0x232E> = 0xff;
        <0x232F> = 0xff;
        <0x2330> = 0xff;
        <0x2331> = 0xff;
        <0x2332> = 0xff;
        <0x2333> = 0xff;
        <0x2334> = 0xff;
        <0x2335> = 0xff;
        <0x2336> = 0xff;
        <0x2337> = 0xff;
        <0x2338> = 0xff;
        <0x2339> = 0xff;
        <0x233A> = 0xff;
        <0x233B> = 0xff;
        <0x233C> = 0xff;
        <0x233D> = 0xff;
        <0x233E> = 0xff;
        <0x233F> = 0xff;
        <0x2340> = 0xff;
        <0x2341> = 0xff;
        <0x2342> = 0xff;
        <0x2343> = 0xff;
        <0x2344> = 0xff;

        // ammo
        <0x2345> = 0xff;
        <0x2346> = 0xff;
        <0x2347> = 0xff;
    } else if(item == ITEM.JAGUAR_RING) {
         set(<0x2262, 0x02>);
    } else if(item == ITEM.SPEAR_1) {
        <0x2441> = 0x14;
    } else if(item == ITEM.SPEAR_3) {
        <0x2441> = 0x18;
    }
}

fun reward(item) {
    if(item == ITEM.JAGUAR_RING) {
        fanfare_item();

        unlock(item);

        sleep(0x20);
        subtext(0x066f);
        
        fanfare_weapon();
    } else if(item == ITEM.AXE_1) {
        <0x2441> = 0x0a;
        
        subtext(0x05b8);
        fanfare_weapon();
    } else if(item == ITEM.SPEAR_3) {
        unlock(item);
        
        subtext(0x2247);
        fanfare_weapon();
    } else if(item == ITEM.HARD_BALL) {
        set(<0x225a, 0x02>);
        
        dialog(0x0651);
        fanfare_weapon();
    } else if(item == ITEM.FLASH) {
        set(<0x2259, 0x80>);
        
        dialog(0x0963);
        fanfare_weapon();
    } else if(item == ITEM.ACID_RAIN) {
        set(<0x2258, 0x01>);
        
        dialog(0x059d);
        fanfare_weapon();
    } else if(item == ITEM.WINGS) {
        <0x2391> = 0x0804;
        <0x2395> = 0x0014;
        eval("a3 3a // (a3) CALL "Loot gourd?" (0x3a)");
        
        fanfare_weapon();
    } else if(item == ITEM.PETAL) {
        <0x2391> = 0x0800;
        <0x2395> = 0x0002;
        eval("a3 3a // (a3) CALL "Loot gourd?" (0x3a)");
        
        fanfare_weapon();
    } else if(item == ITEM.NECTAR) {
        <0x2391> = 0x0801;
        <0x2395> = 0x0012;
        eval("a3 3a // (a3) CALL "Loot gourd?" (0x3a)");
        
        fanfare_weapon();
    }
}

fun wait(character) {
    code(0x2e, character, "// (2e) Wait for boy (d0) to reach destination");
}

fun walk(character, x, y, waiting) {
    code(0x6e, character, x, y, "// (6e) Make controlled char walk to x=0x1c,y=0x1f");
    if(waiting > 0x00) {
        wait(character);
    }
    // TODO: somehow locks the character
}

fun sepia() {
    eval("b4 05 b0 b0 b0 82 84 82 90 3e 59 00 // (b4) CALL Absolute (24bit) script 0x92d93e ("Unnamed ABS script 0x92d93e")  WITH 5 ARGS 0, 0, 0, 0x84, 0x90");
}

fun hide_status_bar() {
    eval("29 e7 23 00 // (29) CALL 0x92a3e7 Hide status bar layer");
}

fun clear_status_effects() {
    code(0xaa, "// (aa) Clear boy and dog statuses");
}

fun brightness(brightness) {
    code(0x91, brightness, "// (91) Sets brightness to 0");
}

fun lightning() {
    eval("a3 36 // (a3) CALL "Unnamed Global script 0x36" (0x36)");
}

fun rain() {
    eval("07 2a 59 00 // (07) CALL 0x92d92a Outro rain and sky color");
}
fun rain_dark() {
    rain();
    
    brightness(0xb5);
}

fun yield() {
    code(0x3a, "// (3a) YIELD (break out of script loop, continue later)");
}

fun heal(character, animation) {
    if(animation == False) {
        if(character == CHARACTER.BOTH) {
            code(0x95, CHARACTER.BOY, 0x84, 0x03e7, "// (95) HEAL dog FOR 0x03e7 = 999");
            code(0x95, CHARACTER.DOG, 0x84, 0x03e7, "// (95) HEAL dog FOR 0x03e7 = 999");
        } else {
            code(0x95, character, 0x84, 0x03e7, "// (95) HEAL dog FOR 0x03e7 = 999");
        }
    } else {
        if(character == CHARACTER.BOY) {
            code(0x94, character, 0x08, 0x8d, 0x01, 0x29, 0x3f, 0x1a, 0xd5, "// (94) HEAL boy FOR *($23e5 + 15) WITH ANIMATION = health");
        } else if(character == CHARACTER.DOG) {
            code(0x94, character, 0x08, 0x8f, 0x01, 0x29, 0x3f, 0x1a, 0xd5, "// (94) HEAL dog FOR *($23e7 + 15) WITH ANIMATION = health");
        } else if(character == CHARACTER.BOTH) {
            code(0x94, CHARACTER.BOY, 0x08, 0x8d, 0x01, 0x29, 0x3f, 0x1a, 0xd5, "// (94) HEAL boy FOR *($23e5 + 15) WITH ANIMATION = health");
            code(0x94, CHARACTER.DOG, 0x08, 0x8f, 0x01, 0x29, 0x3f, 0x1a, 0xd5, "// (94) HEAL dog FOR *($23e7 + 15) WITH ANIMATION = health");
        }
    }
}

fun shaking(on) {
    if(on > 0x00) {
        code(0x8d, 0x01, "// (8d) 01 Start screen shaking");
        code(0x18, 0xb1, 0x01, 0xb1, "// (18) WRITE SCREEN SHAKING MAGNITUDE X ($2409) = 0x0001");
        code(0x18, 0xb3, 0x01, 0xb1, "// (18) WRITE SCREEN SHAKING MAGNITUDE Y ($240b) = 0x0001");
    } else {
        code(0x8d, 0x00, "// (8d) 01 Start screen shaking");
    }

}

fun fade_in() {
    eval("29 75 5e 00 // (29) CALL 0x92de75 Some cinematic script (used multiple times)");
}

fun object(index, value) {
    code(0x5c, 0xb0 + index, 0xb0 + value, "// (5c) SET OBJ 5 STATE = val:1 (load/unload)");
}

fun nop() {
    code(0x4d, "// NOP");
}

fun select_alchemy() {
    code(0x63, "// (63) SHOW ALCHEMY SELECTION SCREEN");
}
fun select_alchemy_with_preselection(alchemy_index) {
    code(0x18, 0xed, 0x01, 0xd0 + alchemy_index, "// (18) WRITE PRESELECT ALCHEMY ($2445) = Flash (0x1e)");
    select_alchemy();
}

fun level(level) {
    MEMORY.BOY_LEVEL = level;
}

fun cast_character(spell, level, target) {
    // 00 = acid rain, flash, crush, drain, double drain, sting, lightnint storm, explosion
    // 10 = corosion, nitro, stop, fireball, confound, cure, heal, miracle cure
    // 20 = one up, forcefield, slow burn, storm, disrupt, plague

    // eval("ac d0 82 40 82 dc d0 b0 // (ac) entity attached to script? CASTS SPELL 0x26 POWER 0xdc ON boy, dog if alive");

    if(target == CHARACTER.BOY) {
        code(0xac, 0xd0, 0x82, spell, 0x82, level, 0xd0, 0xb0, "// (ac) entity attached to script? CASTS SPELL 0x26 POWER 0xdc ON boy, dog if alive");
    } else if(target == CHARACTER.DOG) {
        code(0xac, 0xd0, 0x82, spell, 0x82, level, 0xd1, 0xb0, "// (ac) entity attached to script? CASTS SPELL 0x26 POWER 0xdc ON boy, dog if alive");
    } else if(target == CHARACTER.BOTH) {
        code(0xac, 0xd0, 0x82, spell, 0x82, level, 0xd0, 0xd1, 0xb0, "// (ac) entity attached to script? CASTS SPELL 0x26 POWER 0xdc ON boy, dog if alive");
    }
}