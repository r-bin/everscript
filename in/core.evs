enum ADDRESS {
    SOUTH_JUNGLE_ENTER = 0x9384d9,
    SOUTH_JUNGLE_ENTER_GOURD_1 = 0x93802b,

    FE_EXIT_NORTH = 0x94bead,
    FE_EXIT_NORTH_GATED = 0x94bedc,
    FE_EXIT_EAST = 0x94be9f,
    FE_EXIT_SOUTH = 0x94be91,
    FE_EXIT_WEST = 0x94bee2,

    RAPTORS_EXIT_NORTH = 0x93874d,
    RAPTORS_EXIT_SOUTH = 0x93873f,

    THRAXX_EXIT_NORTH = 0x93c6d8,
    THRAXX_EXIT_SOUTH = 0x93c6ae,

    SALABOG_EXIT_SOUTH = 0x9786e4,
    SALABOG_EXIT_NORTH = 0x9786ec,

    BRIAN_MAP_POINTER = 0x928084,
    BRIAN_ENTER = 0x928000
}

enum MEMORY {
    DOG = <0x2443>,
    GAIN_WEAPON = <0x2441>,
    
    LAST_ENTITY = <0x0341>
}

enum MAP {
    START = 0x00,
    STRONGHEART = 0x34,
    RAPTORS = 0x5c,
    FE_VILLAGE = 0x25,
    THRAXX = 0x18,
    MAGMAR = 0x3f,
    SALABOG = 0x01,
    
    BRIAN = 0x15
}

enum DOG {
    WOLF = 0x2,
    WOLF2 = 0x4,
    GREYHOUND = 0x6,
    POODLE = 0x8,
    PUPPER = 0xa,
    TOASTER = 0xc
}

enum CHARACTER {
    BOY = 0xd0,
    DOG = 0xd1,
    ACTIVE = 0xd2,
    INACTIVE = 0xd3,

    BOTH = 0x00,
    NONE = 0x01
}

enum MUSIC {
    START = 0x12,
    THRAXX = 0x04,

    FANFARE = 0x78
}

enum DIRECTION {
    NORTH = 0x26,
    EAST = 0x1d,
    SOUTH = 0x21,
    WEST = 0x19,
    
    UNKNOWN = 0x00
}

enum FLAG {
    RAPTORS = <0x225f, 0x40>,
    THRAXX = <0x2260, 0x10>,
    MAGMAR = <0x2260, 0x40>,
    SALABOG = <0x22f3, 0x20>,

    GOURD_1 = <0x2268, 0x40>,
    
    IN_ANIMATION = <0x22eb, 0x20>,

    RANDOM_1 = <0x2266, 0x01>,
    RANDOM_2 = <0x2266, 0x02>,
    RANDOM_3 = <0x2266, 0x04>,
    RANDOM_4 = <0x2266, 0x08>,
    RANDOM_5 = <0x2266, 0x10>,
    RANDOM_6 = <0x2266, 0x20>,
    RANDOM_7 = <0x2266, 0x30>,
    RANDOM_8 = <0x2266, 0x40>
}

enum ENEMY {
    FLOWER = 0x0b
}
enum ITEM {
    JAGUAR_RING = 0x0100,

    AXE_1 = 0x0200,
    SPEAR_3 = 0x0201,
    
    HARD_BALL = 0x0300,
    ACID_RAIN = 0x0301,
    FLASH = 0x0302,

    WINGS = 0x0400,
    PETAL = 0x0401,
    NECTAR = 0x0402
}

fun end() {
    code(0x00, "// (00) END (return)");
}

fun fade_out() {
    code(0x27, "// (27) Fade-out screen (WRITE $0b83=0x8000)");
}
fun fade_out_stop_music() {
    code(0xa3, 0x00, "// (a3) CALL "Fade-out / stop music" (0x00)");
}
fun load_map(map, x, y) {
    code(0x22, x, y, map, 0x00, "// (22) CHANGE MAP = 0x34 @ [ 0x0090 | 0x0118 ]: ...");
}
fun prepare_transition(direction_in, direction_out) {
    code(0xa3, direction_out, "// (a3) CALL "Prepare room change? North exit/south entrance outdoor-indoor?" (0x26)");
}

fun transition(map, x, y, direction_in, direction_out) {
    fade_out_stop_music();
    prepare_transition(direction_in, direction_out);
    load_map(x, y, map);
}

fun teleport(character, x, y) {
    if(character == CHARACTER.BOTH) {
        code(0x20, x, y, "// (20) Teleport both to 43 93");
    } else {
        code(0x42, character, y, x, "// 42) Teleport boy to 1f, 17");
    }
}

fun init_map(x_start, y_start, x_end, y_end) {
    code(0x1b, 0x23e9 - 0x2258, 0x23eb - 0x2258, x_start, y_start);
    code(0x1b, 0x23ed - 0x2258, 0x23ef - 0x2258, x_end, y_end);
}

fun music(music) {
    code(0x33, music, "// PLAY MUSIC 0x12");
}
fun music_volume(music, volume) {
    music(music);
    code(0x86, 0x82, volume, "// (86) SET AUDIO volume to 0x64");
}

fun price(index, rate, drop, quantity) {
    if(index == 0x1) {
        <0x239b> = rate;
        <0x23a1> = drop;
        <0x23a7> = quantity;
    } else if(index == 0x2) {
        <0x239d> = rate;
        <0x23a3> = drop;
        <0x23a9> = quantity;
    } else if(index == 0x3) {
        <0x239f> = rate;
        <0x23a5> = drop;
        <0x23ab> = quantity;
    }
}

fun add_enemy(enemy, x, y) {
    code(0xba, enemy, x, y, "// (ba) LOAD NPC 0b at 49 79");
}

fun add_enemy_with_flags(enemy, x, y, flags) {
    code(0x3c, enemy, 0x00, flags, x, y, "// (ba) LOAD NPC 0b at 49 79");
}

fun control(character) {
    if(character == CHARACTER.NONE) {
        code(0xc0, "// (c0) BOY+DOG = STOPPED");
    } else if(character == CHARACTER.BOTH) {
        code(0xc1, "// (c1) BOY+DOG = Player controlled");
    }
}

fun text_start() {
    control(CHARACTER.NONE);
    code(0xa3, 0x02, "// (a3) CALL "Open message box?" (0x02)");
}
fun text(id) {
    code(0x51, id, "// (51) SHOW TEXT 10bf FROM 0x91e0bf compressed WINDOWED c14dd8> '[0x97][0x8b]Goat[LF]' '[0x8b]Chicken[LF]' '[0x8b]Basket'");
}
fun text_end() {
    code(0x55, "// (55) CLEAR TEXT");
    
    control(CHARACTER.BOTH);
}

fun subtext(id) {
    code(0x52, id, "// (52) SHOW TEXT 066f FROM 0x91d66f compressed UNWINDOWED c03ad9> 'Received Jaguar Ring'");
}

fun question(id) {
    text_start();

    text(id);
    
    eval("1d 69 00 30 ac // (1d) WRITE $289d = Dialog response (preselect 0)");
    
    text_end();
}

fun dialog(id) {
    text_start();

    text(id);

    text_end();
}

fun sleep(ticks) {
    code(0xa7, ticks, "// (a7) SLEEP 59 TICKS");
}

fun fanfare() {
    code(0xa3, 0x00, "// (a3) CALL "Fade-out / stop music" (0x00)");
    music(MUSIC.FANFARE);
    code(0xa3, 0x01, "// (a3) CALL "Fade-in / start music" (0x01)");
}
fun fanfare_item() {
    fanfare();
}
fun fanfare_weapon() {
    control(CHARACTER.NONE);
    eval("29 33 3f 00 // (29) CALL 0x92bf33 Hold up weapon");

    sleep(0x08);
    fanfare();
        
    sleep(0xc8);
    control(CHARACTER.BOTH);
}

fun reward(item) {
    if(item == ITEM.JAGUAR_RING) {
        fanfare_item();

        // <0x2262> = 0x02;
        set(<0x2262, 0x02>);

        sleep(0x20);
        subtext(0x066f);
        
        fanfare_weapon();
    } else if(item == ITEM.AXE_1) {
        <0x2441> = 0x0a;
        
        subtext(0x05b8);
        fanfare_weapon();
    } else if(item == ITEM.SPEAR_3) {
        <0x2441> = 0x18;
        
        subtext(0x2247);
        fanfare_weapon();
    } else if(item == ITEM.HARD_BALL) {
        set(<0x225a, 0x02>);
        
        dialog(0x0651);
        fanfare_weapon();
    } else if(item == ITEM.FLASH) {
        set(<0x2259, 0x80>);
        
        dialog(0x0963);
        fanfare_weapon();
    } else if(item == ITEM.ACID_RAIN) {
        set(<0x2258, 0x01>);
        
        dialog(0x059d);
        fanfare_weapon();
    } else if(item == ITEM.WINGS) {
        eval("18 39 01 84 04 08 // (18) WRITE PRIZE    ($2391) = Wings (0x0804)");
        eval("17 3d 01 14 00 // (17) WRITE MAP REF? ($2395) = 0x0014");
        eval("a3 3a // (a3) CALL "Loot gourd?" (0x3a)");
        
        fanfare_weapon();
    } else if(item == ITEM.PETAL) {
        eval("18 39 01 84 00 08 // (18) WRITE PRIZE    ($2391) = Wings (0x0804)");
        eval("17 3d 01 02 00 // (17) WRITE MAP REF? ($2395) = 0x0014");
        eval("a3 3a // (a3) CALL "Loot gourd?" (0x3a)");
        
        fanfare_weapon();
    } else if(item == ITEM.NECTAR) {
        eval("18 39 01 84 01 08 // (18) WRITE PRIZE    ($2391) = Wings (0x0804)");
        eval("17 3d 01 12 00 // (17) WRITE MAP REF? ($2395) = 0x0014");
        eval("a3 3a // (a3) CALL "Loot gourd?" (0x3a)");
        
        fanfare_weapon();
    }
}