#memory(
    string_key(0x0000)..string_key(0x232b), // all string keys

    0x300000..0x3fffff // extension
)
#include("in/core.evs")

#patch(
    // "void_maps",

    "skip_intro",
    // "brian",
    // "camera_hack",
    // "free_graveyard_ids",
    // "save_file_growth",

    // asm
    // "debug_menu", // uses 0x3f0000…???
    // "_hook_input", // 0x3f0000…0x310000
        // "hotkeys", // uses 0x3f00000…???
        // "room_timer", // uses 0x300000…???
    // "_hook_trigger",
)

map inbetween(0x05) {
    enum entrance {
        north_1 = entrance(0x2d, 0x01, DIRECTION.SOUTH),
        east_1 = entrance(0x17, 0x3f, DIRECTION.WEST),
        west_1 = entrance(0x17, 0x3f, DIRECTION.EAST),
        west_2 = entrance(0x17, 0x3f, DIRECTION.EAST)
    }

    @install()
    fun trigger_enter() {
        fade_in();
        subtext(string("hello world - inbetween[END]"));

        sleep(0x50);
        map_transition(inbetween_1, north_1, DIRECTION.NORTH);
    }
};

map inbetween_1(0x05) {
    enum entrance {
        north_1 = entrance(0x17, 0x3f, DIRECTION.SOUTH),
        east_1 = entrance(0x17, 0x3f, DIRECTION.WEST),
        west_1 = entrance(0x17, 0x3f, DIRECTION.EAST),
        west_2 = entrance(0x17, 0x3f, DIRECTION.EAST)
    }

    @install()
    fun trigger_enter() {
        fade_in();
        subtext(string("VARIANT 1 - inbetween[END]"));

        sleep(0x50);
        map_transition(flowers, north_1, DIRECTION.NORTH);
    }
};

map flowers(0x38) {
    enum entrance {
        north_1 = entrance(0x17, 0x3f, DIRECTION.SOUTH),
        east_1 = entrance(0x17, 0x3f, DIRECTION.WEST),
        west_1 = entrance(0x17, 0x3f, DIRECTION.EAST),
        west_2 = entrance(0x17, 0x3f, DIRECTION.EAST)
    }
    
    @install()
    fun trigger_enter() {
        fade_in();
        subtext(string("hello world - flowers[END]"));

        sleep(0x50);
        map_transition(inbetween, north_1, DIRECTION.NORTH);
    }
};

map brian(0x15) {
    @install()
    fun trigger_enter() {
        fade_in();
        subtext(string("hello world - brian[END]"));
    }
};