#memory(
    string_key(0x0000)..string_key(0x232b), // all string keys
    function_key(0x0000)..function_key(0x232b), // TODO: all function keys?

    0x300000..0x3fffff // extension
)
#include("in/core.evs")

#patch(
    // "void_maps",

    "skip_intro",
    // "brian",
    // "camera_hack",
    // "free_graveyard_ids",
    // "save_file_growth",

    // asm
    // "debug_menu", // uses 0x3f0000…???
    // "_hook_input", // 0x3f0000…0x310000
        // "hotkeys", // uses 0x3f00000…???
        // "room_timer", // uses 0x300000…???
    // "_hook_trigger",
)

map inbetween(0x05) {
    enum entrance {
        north_1 = entrance(0x2d, 0x01, DIRECTION.SOUTH),
        east_1 = entrance(0x17, 0x3f, DIRECTION.WEST),
        west_1 = entrance(0x17, 0x3f, DIRECTION.EAST),
        west_2 = entrance(0x17, 0x3f, DIRECTION.EAST)
    }

    enum stepon_trigger {
        exit_north = @install() fun test() {
            subtext(string("exit? 0 [END]"));
        },
        exit_north = @install() fun test() {
            subtext(string("exit? 1 [END]"));
        },
        exit_north = @install() fun test() {
            subtext(string("exit? 2 [END]"));
        },
        exit_north = @install() fun test() {
            subtext(string("exit? 3 [END]"));
        },
        exit_north = @install() fun test() {
            subtext(string("exit? 4 [END]"));
        },
        exit_north = @install() fun test() {
            subtext(string("exit? 5 [END]"));
        },
        exit_north = @install() fun test() {
            subtext(string("exit? 6 [END]"));
        },
        exit_north = @install() fun test() {
            subtext(string("exit? 7 [END]"));
        },
        exit_north = @install() fun test() {
            subtext(string("exit? 8 [END]"));
        },
        exit_north = @install() fun test() {
            subtext(string("exit? 9 [END]"));
            map_transition(inbetween_1, north_1, DIRECTION.NORTH);
        },
        exit_north = @install() fun test() {
            subtext(string("exit? 10 [END]"));
        },
        exit_north = @install() fun test() {
            subtext(string("exit? 11 [END]"));
        },
        exit_north = @install() fun test() {
            subtext(string("exit? 12 [END]"));
        },
        exit_north = @install() fun test() {
            subtext(string("exit? 13 [END]"));
        },
        exit_north = @install() fun test() {
            subtext(string("exit? 14 [END]"));
        },
        exit_north = @install() fun test() {
            subtext(string("exit? 15 [END]"));
        },

        exit_north = @install() fun test() {
            subtext(string("exit? 16 [END]"));
        },
        exit_north = @install() fun test() {
            subtext(string("exit? 17 [END]"));
        },
        exit_north = @install() fun test() {
            subtext(string("exit? 18 [END]"));
        },
        exit_north = @install() fun test() {
            subtext(string("exit? 19 [END]"));
        }
    }

    @install()
    fun trigger_enter() {
        fade_in();
        subtext(string("hello world - inbetween[END]"));

        sleep(0x50);
        // map_transition(inbetween_1, north_1, DIRECTION.NORTH);
    }
};

map inbetween_1(0x05) {
    enum entrance {
        north_1 = entrance(0x2d, 0x01, DIRECTION.SOUTH),
        east_1 = entrance(0x17, 0x3f, DIRECTION.WEST),
        west_1 = entrance(0x17, 0x3f, DIRECTION.EAST),
        west_2 = entrance(0x17, 0x3f, DIRECTION.EAST)
    }

    enum b_trigger {
        b_trigger_0 = @install() fun test() {
            nop();
        }
    }

    enum stepon_trigger {
        exit_north = @install() fun test() {
            subtext(string("VARIANT exit? 0 [END]"));
        },
        exit_north = @install() fun test() {
            subtext(string("VARIANT exit? 1 [END]"));
        },
        exit_north = @install() fun test() {
            subtext(string("VARIANT exit? 2 [END]"));
        },
    }

    @install()
    fun trigger_enter() {
        fade_in();
        subtext(string("VARIANT 1 - inbetween[END]"));

        sleep(0x50);
        // map_transition(flowers, north_1, DIRECTION.NORTH);
    }
};

map flowers(0x38) {
    enum entrance {
        north_1 = entrance(0x17, 0x30, DIRECTION.SOUTH),
        east_1 = entrance(0x17, 0x3f, DIRECTION.WEST),
        west_1 = entrance(0x17, 0x3f, DIRECTION.EAST),
        west_2 = entrance(0x17, 0x3f, DIRECTION.EAST)
    }
    
    enum b_trigger {
        b_trigger_0 = @install() fun test() {
            subtext(string("test 0[END]"));
            map_transition(flowers_2, north_1, DIRECTION.NORTH);
        },
        b_trigger_1 = @install() fun test() {
            subtext(string("test 1[END]"));
            map_transition(flowers_2, north_1, DIRECTION.NORTH);
        },
        b_trigger_2 = @install() fun test() {
            subtext(string("test 2[END]"));
            map_transition(flowers_2, north_1, DIRECTION.NORTH);
        }
    }

    @install()
    fun trigger_enter() {
        fade_in();
        subtext(string("hello world - flowers[END]"));

        sleep(0x50);
        // map_transition(inbetween, north_1, DIRECTION.NORTH);
    }
};

map flowers_2(0x38) {
    enum entrance {
        north_1 = entrance(0x17, 0x30, DIRECTION.SOUTH),
        east_1 = entrance(0x17, 0x3f, DIRECTION.WEST),
        west_1 = entrance(0x17, 0x3f, DIRECTION.EAST),
        west_2 = entrance(0x17, 0x3f, DIRECTION.EAST)
    }
    
    enum b_trigger {
        b_trigger_0 = @install() fun test() {
            subtext(string("VARIANT test 0_2[END]"));
            map_transition(inbetween, north_1, DIRECTION.NORTH);
        },
        b_trigger_1 = @install() fun test() {
            subtext(string("VARIANT test 1_2[END]"));
            map_transition(inbetween, north_1, DIRECTION.NORTH);
        },
        b_trigger_2 = @install() fun test() {
            subtext(string("VARIANT test 2_2[END]"));
            map_transition(inbetween, north_1, DIRECTION.NORTH);
        }
    }

    @install()
    fun trigger_enter() {
        fade_in();
        subtext(string("VARIANT - flowers_2[END]"));

        sleep(0x50);
        // map_transition(inbetween, north_1, DIRECTION.NORTH);
    }
};

map brian(0x15) {
    @install()
    fun trigger_enter() {
        fade_in();
        subtext(string("hello world - brian[END]"));
    }
};